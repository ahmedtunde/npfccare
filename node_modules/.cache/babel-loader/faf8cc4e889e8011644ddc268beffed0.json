{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xerde2/Downloads/npf-admin-web/src/components/loanManagement/adminCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { getCommentByLoanId } from \"../../services/loanService\";\nimport { ReactComponent as NothingFoundIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/icons/nothing-found.svg\";\nimport notify from \"../../utils/notification\";\nimport { useAuth } from \"../../components/utilities\";\nimport { getAllAdminProfiles } from \"../../services/adminService\";\nimport { useHistory, useLocation, useRouteMatch, useParams } from \"react-router-dom\";\nimport { validateToken } from \"../../utils/errorHandler\";\nimport { getAccessToken } from \"../../utils/localStorageService\";\n\nconst AdminCard = _ref => {\n  _s();\n\n  let {\n    comments,\n    branch,\n    path\n  } = _ref;\n  const history = useHistory();\n  const auth = useAuth();\n  const token = getAccessToken();\n  useEffect(() => {\n    validateToken(token, history, jwt_decode, auth, notify);\n  }, [auth, history, token]);\n\n  const handleNavigateToAdminDetails = id => {\n    history.push(`${path}/adminDetails?id=${id}`);\n    return;\n  };\n\n  console.log(comments);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: comments && comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-borderless admin-table-hover table-hover\" // onClick={handleNavigateToCustomer}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"color-dark-text-blue\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Staff ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Admin Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Admin Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"spacer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), comments && comments.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleNavigateToAdminDetails(data.id),\n          className: \"customer-card font-weight-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"repay-method\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.staff_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"repay-method\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${data.firstname} ${data.lastname}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"repay-method\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"repay-method\",\n            children: data.AdminUserRoles.map(role => role.code !== null && role.code !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${role.name} (${role.code})`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${role.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"repay-method\",\n            children: branch && branch.map(dtx => dtx.id === Number(data.branch) && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: dtx.name\n            }, dtx.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleNavigateToAdminDetails(data.id),\n              className: \"btn btn-success action-btn bg-color-green\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-comment\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"NO ADMIN FOUND!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminCard, \"0GNWDPcv3J8woPSovRrld9jLDro=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = AdminCard;\nexport default AdminCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminCard\");","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/components/loanManagement/adminCard.js"],"names":["React","useEffect","useState","jwt_decode","getCommentByLoanId","notify","useAuth","getAllAdminProfiles","useHistory","useLocation","useRouteMatch","useParams","validateToken","getAccessToken","AdminCard","comments","branch","path","history","auth","token","handleNavigateToAdminDetails","id","push","console","log","length","map","data","staff_id","firstname","lastname","username","AdminUserRoles","role","code","name","dtx","Number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { getCommentByLoanId } from \"../../services/loanService\";\nimport { ReactComponent as NothingFoundIcon } from \"../../assets/icons/nothing-found.svg\";\nimport notify from \"../../utils/notification\";\nimport { useAuth } from \"../../components/utilities\";\nimport { getAllAdminProfiles } from \"../../services/adminService\";\nimport {\n  useHistory,\n  useLocation,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\nimport { validateToken } from \"../../utils/errorHandler\";\nimport { getAccessToken } from \"../../utils/localStorageService\";\n\nconst AdminCard = ({ comments, branch, path }) => {\n  const history = useHistory();\n  const auth = useAuth();\n  const token = getAccessToken();\n\n  useEffect(() => {\n    validateToken(token, history, jwt_decode, auth, notify);\n  }, [auth, history, token]);\n\n  const handleNavigateToAdminDetails = (id) => {\n    history.push(`${path}/adminDetails?id=${id}`);\n    return;\n  };\n\n  console.log(comments);\n\n  return (\n    <>\n      {comments && comments.length > 0 ? (\n        <table\n          className=\"table table-borderless admin-table-hover table-hover\"\n          // onClick={handleNavigateToCustomer}\n        >\n          <thead className=\"color-dark-text-blue\">\n            <tr>\n              <th scope=\"col\">Staff ID</th>\n\n              <th scope=\"col\">Admin Name</th>\n\n              <th scope=\"col\">Email</th>\n\n              <th scope=\"col\">Admin Role</th>\n\n              <th scope=\"col\">Branch</th>\n\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"spacer\"></tr>\n            {comments &&\n              comments.map((data) => (\n                <tr\n                  onClick={() => handleNavigateToAdminDetails(data.id)}\n                  key={data.id}\n                  className=\"customer-card font-weight-600\"\n                >\n                  <td className=\"repay-method\">\n                    <p>{data.staff_id}</p>\n                  </td>\n\n                  <td className=\"repay-method\">\n                    <p>{`${data.firstname} ${data.lastname}`}</p>\n                  </td>\n\n                  <td className=\"repay-method\">\n                    <p>{data.username}</p>\n                  </td>\n\n                  <td className=\"repay-method\">\n                    {data.AdminUserRoles.map((role) =>\n                      role.code !== null && role.code !== \"\" ? (\n                        <p>{`${role.name} (${role.code})`}</p>\n                      ) : (\n                        <p>{`${role.name}`}</p>\n                      )\n                    )}\n                  </td>\n\n                  <td className=\"repay-method\">\n                    {branch &&\n                      branch.map(\n                        (dtx) =>\n                          dtx.id === Number(data.branch) && (\n                            <p key={dtx.id}>{dtx.name}</p>\n                          )\n                      )}\n                  </td>\n\n                  <td>\n                    {/* define operation based on active tab */}\n                    <button\n                      onClick={() => handleNavigateToAdminDetails(data.id)}\n                      className=\"btn btn-success action-btn bg-color-green\"\n                    >\n                      View\n                    </button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      ) : (\n        <div className=\"no-comment\">\n          <p>NO ADMIN FOUND!</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AdminCard;\n"]},"metadata":{},"sourceType":"module"}