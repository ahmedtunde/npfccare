{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xerde2/Downloads/npf-admin-web/src/components/loanManagement/customer/approvalModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { ReactComponent as TimesCircleFill } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/icons/times-circle-fill.svg\";\nimport { ReactComponent as CheckCircleFill } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/icons/check-circle-fill.svg\";\nimport { ReactComponent as SpinnerIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/icons/spinner.svg\";\nimport notify from \"../../../utils/notification\";\nimport { addComment, approveOrRejectLoan, disburseLoan, getBranches, getLoanDetails, getLoanProducts, loanRequestBooking } from \"../../../services/loanService\";\nimport { useState } from \"react/cjs/react.development\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { getAdminEmail, getRoles as getAdminRoles } from \"../../../utils/localStorageService\";\nimport { deleteAdminAccount, searchAdminProfile } from \"../../../services/adminService\";\nexport const ApprovalModal = _ref => {\n  _s();\n\n  let {\n    approveModalBtn,\n    setApproveModalBtn,\n    approveData\n  } = _ref;\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [isAboveLoading, setIsAboveLoading] = useState(false);\n  const [acceptModalBtn, setAcceptModalBtn] = useState(false);\n  const [acceptData, setAcceptData] = useState({});\n  const history = useHistory();\n\n  const aboveLimit = async () => {\n    try {\n      const data = {\n        isWithinLimit: false,\n        work_flow_level: approveData.work_flow_level\n      };\n      const loanAppId = approveData.loanAppId;\n      setIsAboveLoading(prev => !prev);\n      const approveRejectApi = await approveOrRejectLoan(data, loanAppId);\n      if (approveRejectApi.error) return notify(approveRejectApi.data, \"error\");\n      notify(approveRejectApi.data.text, \"success\");\n      setApproveModalBtn(prev => !prev);\n      setIsAboveLoading(prev => !prev);\n      history.push(\"/pages/loanMan\");\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsAboveLoading(prev => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: approveModalBtn ? 1 : 0,\n    transform: approveModalBtn ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const handleAcceptModal = () => {\n    return /*#__PURE__*/_jsxDEV(BookAndAcceptLoanModal, {\n      acceptModalBtn: acceptModalBtn,\n      setAcceptModalBtn: setAcceptModalBtn,\n      acceptData: acceptData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n\n  const checkAcceptModal = () => {\n    setApproveModalBtn(prev => !prev);\n    setAcceptModalBtn(prev => !prev);\n    var data = {\n      limit: approveData.limit,\n      maxTerm: approveData.maxTerm,\n      loanAppId: approveData.loanAppId,\n      customerId: approveData.customerId,\n      applicationDate: approveData.applicationDate,\n      status: approveData.status,\n      narrative: approveData.narrative,\n      isWithinLimit: approveData.isWithinLimit,\n      email: approveData.email,\n      firstname: approveData.firstname,\n      lastname: approveData.lastname,\n      productName: approveData.productName\n    };\n    setAcceptData(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [handleAcceptModal(), approveModalBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appr-modal\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"appr-inner\",\n        style: animateModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          approveModalBtn: approveModalBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn appr-close-btn\",\n            onClick: () => setApproveModalBtn(prev => !prev),\n            children: /*#__PURE__*/_jsxDEV(TimesCircleFill, {\n              className: \"modal-cancel-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"appr-modal-text\",\n            children: \"Is the loan amount within your limit?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"appr-modal-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn approve-loan-btn first-btn\",\n              onClick: checkAcceptModal,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), \" \\xA0\", isAprroveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this) : \"Yes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-loan-btn\",\n              onClick: aboveLimit,\n              children: [/*#__PURE__*/_jsxDEV(TimesCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), isAboveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this) : \"No\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true);\n};\n\n_s(ApprovalModal, \"BXh9SkjJdrzH0EdNBPMjG85yfTE=\", false, function () {\n  return [useHistory, useSpring];\n});\n\n_c = ApprovalModal;\nexport const NarrativeModal = _ref2 => {\n  _s2();\n\n  let {\n    narrativeModalBtn,\n    setNarrativeModalBtn,\n    approveData\n  } = _ref2;\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [count, setCount] = useState(false);\n  const [narrative, setNarrative] = useState(\"\");\n  const [countNum, setCountNum] = useState(120);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const history = useHistory();\n\n  const handleSetCount = () => {\n    setCount(prev => !prev);\n  };\n\n  const handleRemoveCount = () => {\n    setCount(false);\n  };\n\n  const getNarrative = e => {\n    setNarrative(e.target.value);\n  };\n\n  const textCounter = () => {\n    //max charcater is 120\n    const maxAmount = 120; //check if user is greater than max character\n\n    narrative.length > maxAmount ? //if input is greater than max character set textarea to only have\n    //the amount of max character entered and nothing more\n    setNarrative(narrative.substring(0, maxAmount)) : //set count indicator value\n    setCountNum(maxAmount - narrative.length); //enable button if input is valid and vice verse\n\n    const validText = narrative.trim();\n    validText.length > 20 ? setIsDisabled(false) : setIsDisabled(true);\n  };\n\n  const countValue = countNum > 1 ? `${countNum} characters remaining` : `${countNum} character remaining`;\n\n  const approveOrReject = async () => {\n    try {\n      const data = {\n        status: approveData.status,\n        narrative: narrative.trim(),\n        isWithinLimit: approveData.isWithinLimit,\n        email: approveData.email,\n        firstname: approveData.firstname,\n        lastname: approveData.lastname,\n        productName: approveData.productName\n      };\n      const loanAppId = approveData.loanAppId;\n      console.log(data);\n      setIsApproveLoading(prev => !prev);\n      const approveRejectApi = await approveOrRejectLoan(data, loanAppId);\n      if (approveRejectApi.error) return notify(approveRejectApi.data, \"error\");\n      console.log(data);\n      notify(`Loan Rejection successful`, \"success\");\n      setNarrativeModalBtn(prev => !prev);\n      setIsApproveLoading(prev => !prev);\n      history.push(\"/pages/loanMan\");\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsApproveLoading(prev => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: narrativeModalBtn ? 1 : 0,\n    transform: narrativeModalBtn ? `translateY(0%)` : `translateY(-100%)`\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: narrativeModalBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appr-modal\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"appr-inner\",\n        style: animateModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          narrativeModalBtn: narrativeModalBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn appr-close-btn\",\n            onClick: () => setNarrativeModalBtn(prev => !prev),\n            children: /*#__PURE__*/_jsxDEV(TimesCircleFill, {\n              className: \"modal-cancel-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"appr-modal-text\",\n            children: \"State your reason for declining this loan request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              onFocus: handleSetCount,\n              onBlur: handleRemoveCount,\n              rows: \"6\",\n              className: \"narrative-text\",\n              value: narrative,\n              onChange: getNarrative,\n              onKeyUp: textCounter,\n              onKeyDown: textCounter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), count ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"text-count\",\n                readOnly: true,\n                type: \"text\",\n                value: countValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"narr-modal-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn approve-loan-btn first-btn\",\n              onClick: approveOrReject,\n              disabled: isDisabled,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0\", isAprroveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this) : \"Submit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-loan-btn\",\n              onClick: () => setNarrativeModalBtn(prev => !prev),\n              children: [/*#__PURE__*/_jsxDEV(TimesCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), \"Cancel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n\n_s2(NarrativeModal, \"BZPKFDidxZwXxlVMuE/IS46psa8=\", false, function () {\n  return [useHistory, useSpring];\n});\n\n_c2 = NarrativeModal;\nexport const BookAndAcceptLoanModal = _ref3 => {\n  _s3();\n\n  let {\n    acceptModalBtn,\n    setAcceptModalBtn,\n    acceptData\n  } = _ref3;\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [amount, setAmount] = useState(null);\n  const [tenure, setTenure] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const getAmount = e => {\n    setAmount(e.target.value);\n\n    if (amount && tenure) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n\n    setError(\"\");\n  };\n\n  const getTenure = e => {\n    setTenure(e.target.value);\n\n    if (amount && tenure) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n\n    setError(\"\");\n  };\n\n  const handleCancel = () => {\n    setAcceptModalBtn(prev => !prev);\n    setAmount(null);\n    setTenure(null);\n    setIsDisabled(true);\n  };\n\n  const bookAndApprovedLoan = async () => {\n    try {\n      const data = {\n        narrative: acceptData.narrative,\n        isWithinLimit: acceptData.isWithinLimit,\n        status: acceptData.status,\n        email: acceptData.email,\n        firstname: acceptData.firstname,\n        lastname: acceptData.lastname,\n        productName: acceptData.productName,\n        approvedAmount: amount,\n        approvedTenure: tenure,\n        applicationDate: moment(acceptData.applicationDate).format(\"LL\")\n      };\n      const loanAppId = acceptData.loanAppId; //   const customerId = acceptData.customerId;\n\n      const limit = acceptData.limit;\n      const maxTerm = acceptData.maxTerm;\n\n      if (amount > limit) {\n        setError(`Amount should not exceed ${limit}`);\n        return;\n      }\n\n      if (tenure > maxTerm) {\n        setError(`Maximun tenure is ${maxTerm} months`);\n        return;\n      }\n\n      setIsApproveLoading(prev => !prev);\n      setError(\"\");\n      console.log(data);\n      const bookLoan = await approveOrRejectLoan(data, loanAppId);\n\n      if (bookLoan.error) {\n        console.log(bookLoan);\n        return notify(bookLoan.data, \"error\");\n      }\n\n      notify(`Loan Approval successful`, \"success\");\n      setAcceptModalBtn(prev => !prev);\n      setIsApproveLoading(prev => !prev);\n      history.push(\"/pages/customers\");\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsApproveLoading(prev => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: acceptModalBtn ? 1 : 0,\n    transform: acceptModalBtn ? `translateY(0%)` : `translateY(-100%)`\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: acceptModalBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appr-modal\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"appr-inner\",\n        style: animateModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          acceptModalBtn: acceptModalBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn appr-close-btn\",\n            onClick: handleCancel,\n            children: /*#__PURE__*/_jsxDEV(TimesCircleFill, {\n              className: \"modal-cancel-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"accept-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accept-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Approved Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"amount-input\",\n                type: \"number\",\n                placeholder: \"Amount\",\n                value: amount,\n                onChange: getAmount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Approved Tenure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"month-input\",\n                type: \"number\",\n                placeholder: \"In months\",\n                value: tenure,\n                onChange: getTenure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"narr-modal-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn approve-loan-btn first-btn\",\n              onClick: bookAndApprovedLoan,\n              disabled: isDisabled,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0\", isAprroveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this) : \"Submit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-loan-btn\",\n              onClick: handleCancel,\n              children: [/*#__PURE__*/_jsxDEV(TimesCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this), \"Cancel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n\n_s3(BookAndAcceptLoanModal, \"7M4JUXYh72D7/dMB73jAP0p/Is4=\", false, function () {\n  return [useHistory, useSpring];\n});\n\n_c3 = BookAndAcceptLoanModal;\nexport const DisburseModal = _ref4 => {\n  _s4();\n\n  let {\n    disburseModalBtn,\n    setDisburseModalBtn,\n    approveData\n  } = _ref4;\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [loanProducts, setLoanProducts] = useState([]); // useEffect(() => {\n  //   handleLoanProducts();\n  // }, []);\n  // const handleLoanProducts = async () => {\n  //   try {\n  //     const companyCode = `NG0020001`;\n  //     const products = await getLoanProducts(companyCode);\n  //     console.log(products);\n  //     if (products.error) return notify(products.message, \"error\");\n  //     setLoanProducts(products.data?.result?.data?.products);\n  //   } catch (error) {\n  //     console.log(error);\n  //     notify(\"Something went wrong\", \"error\");\n  //   }\n  // };\n  // const history = useHistory();\n\n  const disburse = async () => {//   try {\n    //     const today = new Date();\n    //     const requestData = {\n    //       inputDate: moment(today).format(\"YYYYMMDD\"),\n    //       customerType: \"INDIVIDUAL\",\n    //       customerId: `${approveData.customerId}`,\n    //       loanAction: \"\",\n    //       loanProduct: \"\",\n    //       amountRequested: approveData.approvedAmount,\n    //       currency: \"NGN\",\n    //       interestRate: approveData.interestRate,\n    //       termRequested: approveData.approvedTenure,\n    //       loanPurpose: \"1\",\n    //       sector: \"10\",\n    //       guarantorId: approveData.guarantorId,\n    //       disburseAccount: approveData.accountNo,\n    //       repayAccount: approveData.accountNo,\n    //       chargeAccount: approveData.accountNo,\n    //     };\n    //     console.log(requestData);\n    //     loanProducts &&\n    //       loanProducts.forEach((product) => {\n    //         if (product.productDescription === approveData.productName) {\n    //           requestData.loanAction = product.productCode;\n    //           requestData.loanProduct = product.productCode;\n    //         }\n    //       });\n    //     var data = {\n    //       email: approveData.email,\n    //       firstname: approveData.firstname,\n    //       lastname: approveData.lastname,\n    //       productName: approveData.productName,\n    //       sn: \"\",\n    //       accountNo: \"\",\n    //       settlementAccount: \"\",\n    //       loanID: \"\",\n    //       customerName: \"\",\n    //       productCategory: \"\",\n    //       productType: approveData.productType,\n    //       customerType: approveData.customerType,\n    //       sector: approveData.sector,\n    //       dateGranted: \"\",\n    //       expiryDate: approveData.expiryDate,\n    //       tenorInDays: \"\",\n    //       legacyID: approveData.legacyID,\n    //       authorizedLimit: \"\",\n    //       disbursedAmount: \"\",\n    //       arrangementFee: \"\",\n    //       outstandingBalance: \"\",\n    //       interestReceivable: \"\",\n    //       grossLoans: \"\",\n    //       riskRating: \"\",\n    //       pastDueObligationPrincipal: \"\",\n    //       numberOfPaymentsOutstanding: approveData.numberOfPaymentsOutstanding,\n    //       daysPastDue: approveData.daysPastDue,\n    //       pastDueObligationInterest: approveData.pastDueObligationInterest,\n    //       subStatus: approveData.subStatus,\n    //       status: approveData.status,\n    //       contratualIntRate: approveData.contratualIntRate,\n    //       annualEffectiveInterestRate: approveData.annualEffectiveInterestRate,\n    //       restructure: approveData.restructure,\n    //       paymentFrequencyPrincipal: approveData.paymentFrequencyPrincipal,\n    //       paymentFreqInterest: approveData.paymentFreqInterest,\n    //       collateralStatus: approveData.collateralStatus,\n    //       collateralType: approveData.collateralType,\n    //       otherCollateral: approveData.otherCollateral,\n    //       collateralvalue: approveData.collateralvalue,\n    //       daysToRealization: approveData.daysToRealization,\n    //     };\n    //     // setIsApproveLoading((prev) => !prev);\n    //     const loanAppId = approveData.loanAppId;\n    //     // const loanRequest = await loanRequestBooking(requestData);\n    //     console.log(\"clicked\", requestData);\n    // if (loanRequest?.data?.error === true) {\n    //   setIsApproveLoading((prev) => !prev);\n    //   notify(loanRequest?.data?.message, \"error\");\n    //   return;\n    // }\n    // if (loanRequest?.data?.error === true) {\n    //   setIsApproveLoading((prev) => !prev);\n    //   notify(loanRequest?.data?.message, \"error\");\n    //   return;\n    // }\n    // if (loanRequest?.data?.data?.data?.status === true) {\n    //   data.loanID = loanRequest.data.ApplicationId;\n    //   const loanAccount = approveData.account_no;\n    //   const loanDetails = await getLoanDetails(loanAccount);\n    //   console.log(loanDetails);\n    //   if (loanDetails?.data?.data?.data?.status === false) {\n    //     setIsApproveLoading((prev) => !prev);\n    //     notify(loanDetails?.data?.data?.data?.message, \"error\");\n    //     return;\n    //   }\n    //   if (loanDetails?.data?.data?.data?.status === true) {\n    //     data.productCategory = loanDetails.data.loanProduct;\n    //     data.dateGranted = loanDetails.data.dateDisbursed;\n    //     data.outstandingBalance = loanDetails.data.amountDisbursed;\n    //     data.interestReceivable = loanDetails.data.interestReceivable;\n    //     data.grossLoans = loanDetails.data.amountDisbursed;\n    //     data.pastDueObligationPrincipal = loanDetails.data.overdueBalance;\n    //     data.disbursedAmount = loanDetails.data.amountDisbursed;\n    //     const disburse = await disburseLoan(data, loanAppId);\n    //     if (disburse.error) {\n    //       setIsApproveLoading((prev) => !prev);\n    //       notify(disburse.data, \"error\");\n    //       return;\n    //     }\n    //     console.log(data);\n    //     notify(`Loan disbursed successfully`, \"success\");\n    //     setDisburseModalBtn((prev) => !prev);\n    //     setIsApproveLoading((prev) => !prev);\n    //     history.push(\"/pages/loanMan\");\n    //     return;\n    //   }\n    // }\n    // notify(`Something went wrong`, \"error\");\n    // setTimeout(() => {\n    //   // setIsApproveLoading((prev) => !prev);\n    //   setDisburseModalBtn((prev) => !prev);\n    // }, 6000);\n    //     // return;\n    //   } catch (error) {\n    //     notify(error.data, \"error\");\n    //     // setIsApproveLoading(false);\n    //     setTimeout(() => {\n    //       setDisburseModalBtn((prev) => !prev);\n    //     }, 6000);\n    //     return;\n    //   }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: disburseModalBtn ? 1 : 0,\n    transform: disburseModalBtn ? `translateY(0%)` : `translateY(-100%)`\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: disburseModalBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appr-modal\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"appr-inner\",\n        style: animateModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          disburseModalBtn: disburseModalBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn appr-close-btn\",\n            onClick: () => setDisburseModalBtn(prev => !prev),\n            children: /*#__PURE__*/_jsxDEV(TimesCircleFill, {\n              className: \"modal-cancel-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"appr-modal-text\",\n            children: \"Proceed with loan disbursement?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"appr-modal-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn approve-loan-btn first-btn\",\n              onClick: disburse,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this), \" \\xA0\", isAprroveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }, this) : \"Yes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-loan-btn\",\n              onClick: () => {\n                setDisburseModalBtn(prev => !prev);\n                setIsApproveLoading(prev => !prev);\n              },\n              children: [/*#__PURE__*/_jsxDEV(TimesCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 19\n              }, this), \"No\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n\n_s4(DisburseModal, \"s+iw3/PwzbABRzIkrLSFh7vKplI=\", false, function () {\n  return [useSpring];\n});\n\n_c4 = DisburseModal;\nexport const AcceptLoanModal = _ref5 => {\n  _s5();\n\n  let {\n    acceptLoanModalBtn,\n    setAcceptLoanModalBtn,\n    approveData\n  } = _ref5;\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n\n  const acceptLoan = async () => {\n    try {\n      const data = {\n        isWithinLimit: false,\n        work_flow_level: 1\n      };\n      const loanAppId = approveData.loanAppId;\n      setIsApproveLoading(prev => !prev);\n      const approveRejectApi = await approveOrRejectLoan(data, loanAppId);\n      if (approveRejectApi.error) return notify(approveRejectApi.data, \"error\");\n      notify(approveRejectApi.data.text, \"success\");\n      setAcceptLoanModalBtn(prev => !prev);\n      setIsApproveLoading(prev => !prev);\n      window.location.reload();\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsApproveLoading(prev => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: acceptLoanModalBtn ? 1 : 0,\n    transform: acceptLoanModalBtn ? `translateY(0%)` : `translateY(-100%)`\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: acceptLoanModalBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appr-modal\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"appr-inner\",\n        style: animateModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          acceptLoanModalBtn: acceptLoanModalBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn appr-close-btn\",\n            onClick: () => setAcceptLoanModalBtn(prev => !prev),\n            children: /*#__PURE__*/_jsxDEV(TimesCircleFill, {\n              className: \"modal-cancel-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"appr-modal-text\",\n            children: \"Proceed to loan acceptance?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"appr-modal-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn approve-loan-btn first-btn\",\n              onClick: acceptLoan,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0\", isAprroveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 21\n              }, this) : \"Proceed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-loan-btn\",\n              onClick: () => setAcceptLoanModalBtn(prev => !prev),\n              children: [/*#__PURE__*/_jsxDEV(TimesCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 19\n              }, this), \"Cancel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n\n_s5(AcceptLoanModal, \"ys4D6hTSieydgzxlXfOSPqyjhVI=\", false, function () {\n  return [useSpring];\n});\n\n_c5 = AcceptLoanModal;\nexport const CommentModal = _ref6 => {\n  _s6();\n\n  let {\n    commentModalBtn,\n    setCommentModalBtn,\n    commentData\n  } = _ref6;\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [count, setCount] = useState(false);\n  const [countNum, setCountNum] = useState(1000);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [branch, setBranch] = useState([]);\n  const [staffBranch, setStaffBranch] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [getAdmin, setGetAdmin] = useState({});\n  const [adminName, setAdminName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const roles = getAdminRoles();\n  const email = getAdminEmail();\n  useEffect(() => {\n    const handleSearchAdmin = async () => {\n      setLoading(true);\n\n      try {\n        const response = await searchAdminProfile(email);\n        const result = await getBranches();\n\n        if (response.data.status) {\n          setGetAdmin(response.data.data);\n          setBranch(result.data);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    handleSearchAdmin();\n  }, [email]);\n  useEffect(() => {\n    setAdminName(`${getAdmin.firstname} ${getAdmin.lastname}`);\n    branch && branch.forEach(option => {\n      if (parseInt(getAdmin.branch) === option.id) {\n        setStaffBranch(option.name);\n      }\n    });\n  }, [branch, getAdmin.branch, getAdmin.firstname, getAdmin.lastname]);\n\n  const handleSetCount = () => {\n    setCount(prev => !prev);\n  };\n\n  const handleRemoveCount = () => {\n    setCount(false);\n  };\n\n  const getComment = e => setComment(e.target.value);\n\n  const textCounter = () => {\n    //max charcater is 120\n    const maxAmount = 1000; //check if user is greater than max character\n\n    comment.length > maxAmount ? //if input is greater than max character set textarea to only have\n    //the amount of max character entered and nothing more\n    setComment(comment.substring(0, maxAmount)) : //set count indicator value\n    setCountNum(maxAmount - comment.length); //enable button if input is valid and vice verse\n\n    const validText = comment.trim();\n    validText.length > 20 ? setIsDisabled(false) : setIsDisabled(true);\n  };\n\n  const countValue = countNum > 1 ? `${countNum} characters remaining` : `${countNum} character remaining`;\n\n  const addLoanOfficerComment = async () => {\n    try {\n      const data = {\n        staffId: getAdmin.staff_id,\n        comment: roles === \"AUDIT\" ? `AUDITOR'S COMMENT: ${comment.trim()}` : comment.trim(),\n        rank: getAdmin.rank,\n        fullName: adminName,\n        staffEmail: email,\n        staffBranch: staffBranch,\n        loanAppId: commentData.loanAppId\n      };\n      setIsApproveLoading(prev => !prev);\n      const response = await addComment(data);\n      if (response.error) return notify(response.data, \"error\");\n      notify(`Comment added successfully`, \"success\");\n      setIsApproveLoading(prev => !prev);\n      setTimeout(() => {\n        setCommentModalBtn(prev => !prev);\n        window.location.reload();\n      }, 2500);\n      return;\n    } catch (error) {\n      notify(error.message, \"error\");\n      setIsApproveLoading(prev => !prev);\n      return;\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: commentModalBtn ? 1 : 0,\n    transform: commentModalBtn ? `translateY(0%)` : `translateY(-100%)`\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: commentModalBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appr-modal\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"comment-inner\",\n        style: animateModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          commentModalBtn: commentModalBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn appr-close-btn\",\n            onClick: () => setCommentModalBtn(prev => !prev),\n            children: /*#__PURE__*/_jsxDEV(TimesCircleFill, {\n              className: \"modal-cancel-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"appr-modal-text\",\n            children: \"Add your comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"staffID\",\n                children: \"Staff ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"staff_id\",\n                id: \"staff_id\",\n                className: \"form-control\",\n                defaultValue: loading ? \"Loading...\" : getAdmin.staff_id,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"fullName\",\n                id: \"fullName\",\n                className: \"form-control\",\n                readOnly: true,\n                defaultValue: loading ? \"Loading...\" : adminName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"rank\",\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"rank\",\n                id: \"rank\",\n                className: \"form-control\",\n                readOnly: true,\n                defaultValue: loading ? \"Loading...\" : getAdmin.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"branch\",\n                children: \"Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"branch\",\n                id: \"branch\",\n                className: \"form-control\",\n                readOnly: true,\n                defaultValue: loading ? \"Loading...\" : staffBranch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"comment\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onFocus: handleSetCount,\n                onBlur: handleRemoveCount,\n                rows: \"10\",\n                className: \"narrative-text\",\n                value: comment,\n                onChange: getComment,\n                onKeyUp: textCounter,\n                onKeyDown: textCounter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 19\n              }, this), count ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"text-count\",\n                  readOnly: true,\n                  type: \"text\",\n                  value: countValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"narr-modal-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn approve-loan-btn first-btn\",\n              onClick: addLoanOfficerComment,\n              disabled: isDisabled,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0\", isAprroveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 21\n              }, this) : \"Submit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-loan-btn\",\n              onClick: () => setCommentModalBtn(prev => !prev),\n              children: [/*#__PURE__*/_jsxDEV(TimesCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 19\n              }, this), \"Cancel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n\n_s6(CommentModal, \"gZs6zQEHtWE6W+yKZzgdlTsVcpY=\", false, function () {\n  return [useSpring];\n});\n\n_c6 = CommentModal;\nexport const DeleteModal = _ref7 => {\n  _s7();\n\n  let {\n    deleteModalBtn,\n    setDeleteModalBtn,\n    deleteData\n  } = _ref7;\n  const history = useHistory();\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const animateModal = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: deleteModalBtn ? 1 : 0,\n    transform: deleteModalBtn ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const handleDeleteProfile = async () => {\n    setIsApproveLoading(true);\n\n    try {\n      const id = deleteData.id;\n      const response = await deleteAdminAccount(id);\n\n      if (response.error) {\n        notify(response.message, \"error\");\n        setIsApproveLoading(false);\n        return;\n      }\n\n      notify(response.message, \"success\");\n      setIsApproveLoading(false);\n      history.push(\"/pages/superAdmin\");\n      return;\n    } catch (error) {\n      notify(\"Something went wrong\", \"success\");\n      setIsApproveLoading(false);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: deleteModalBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appr-modal\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        className: \"appr-inner\",\n        style: animateModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          deleteModalBtn: deleteModalBtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn appr-close-btn\",\n            onClick: () => setDeleteModalBtn(prev => !prev),\n            children: /*#__PURE__*/_jsxDEV(TimesCircleFill, {\n              className: \"modal-cancel-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"appr-modal-text\",\n            children: `Are you sure you want to delete ${deleteData.adminName}'s ${deleteData.adminRole ? deleteData.adminRole : \"\"} profile?`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"narr-modal-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn approve-loan-btn first-btn\",\n              onClick: handleDeleteProfile,\n              disabled: isAprroveLoading ? true : false,\n              children: [/*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0\", isAprroveLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"limit-loading rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 21\n              }, this) : \"Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-loan-btn\",\n              onClick: () => setDeleteModalBtn(prev => !prev),\n              children: [/*#__PURE__*/_jsxDEV(TimesCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 19\n              }, this), \"Cancel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false);\n};\n\n_s7(DeleteModal, \"cOecXiOQVRld878BNnhkcVNlzaw=\", false, function () {\n  return [useHistory, useSpring];\n});\n\n_c7 = DeleteModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ApprovalModal\");\n$RefreshReg$(_c2, \"NarrativeModal\");\n$RefreshReg$(_c3, \"BookAndAcceptLoanModal\");\n$RefreshReg$(_c4, \"DisburseModal\");\n$RefreshReg$(_c5, \"AcceptLoanModal\");\n$RefreshReg$(_c6, \"CommentModal\");\n$RefreshReg$(_c7, \"DeleteModal\");","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/components/loanManagement/customer/approvalModal.js"],"names":["React","useEffect","notify","addComment","approveOrRejectLoan","disburseLoan","getBranches","getLoanDetails","getLoanProducts","loanRequestBooking","useState","useSpring","animated","useHistory","moment","getAdminEmail","getRoles","getAdminRoles","deleteAdminAccount","searchAdminProfile","ApprovalModal","approveModalBtn","setApproveModalBtn","approveData","isAprroveLoading","setIsApproveLoading","isAboveLoading","setIsAboveLoading","acceptModalBtn","setAcceptModalBtn","acceptData","setAcceptData","history","aboveLimit","data","isWithinLimit","work_flow_level","loanAppId","prev","approveRejectApi","error","text","push","animateModal","config","duration","opacity","transform","handleAcceptModal","checkAcceptModal","limit","maxTerm","customerId","applicationDate","status","narrative","email","firstname","lastname","productName","NarrativeModal","narrativeModalBtn","setNarrativeModalBtn","count","setCount","setNarrative","countNum","setCountNum","isDisabled","setIsDisabled","handleSetCount","handleRemoveCount","getNarrative","e","target","value","textCounter","maxAmount","length","substring","validText","trim","countValue","approveOrReject","console","log","BookAndAcceptLoanModal","amount","setAmount","tenure","setTenure","setError","getAmount","getTenure","handleCancel","bookAndApprovedLoan","approvedAmount","approvedTenure","format","bookLoan","DisburseModal","disburseModalBtn","setDisburseModalBtn","loanProducts","setLoanProducts","disburse","AcceptLoanModal","acceptLoanModalBtn","setAcceptLoanModalBtn","acceptLoan","window","location","reload","CommentModal","commentModalBtn","setCommentModalBtn","commentData","branch","setBranch","staffBranch","setStaffBranch","comment","setComment","getAdmin","setGetAdmin","adminName","setAdminName","loading","setLoading","roles","handleSearchAdmin","response","result","forEach","option","parseInt","id","name","getComment","addLoanOfficerComment","staffId","staff_id","rank","fullName","staffEmail","setTimeout","message","DeleteModal","deleteModalBtn","setDeleteModalBtn","deleteData","handleDeleteProfile","adminRole"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ReactComponent as TimesCircleFill } from \"../../../assets/icons/times-circle-fill.svg\";\nimport { ReactComponent as CheckCircleFill } from \"../../../assets/icons/check-circle-fill.svg\";\nimport { ReactComponent as SpinnerIcon } from \"../../../assets/icons/spinner.svg\";\nimport notify from \"../../../utils/notification\";\nimport {\n  addComment,\n  approveOrRejectLoan,\n  disburseLoan,\n  getBranches,\n  getLoanDetails,\n  getLoanProducts,\n  loanRequestBooking,\n} from \"../../../services/loanService\";\nimport { useState } from \"react/cjs/react.development\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport {\n  getAdminEmail,\n  getRoles as getAdminRoles,\n} from \"../../../utils/localStorageService\";\nimport {\n  deleteAdminAccount,\n  searchAdminProfile,\n} from \"../../../services/adminService\";\n\nexport const ApprovalModal = ({\n  approveModalBtn,\n  setApproveModalBtn,\n  approveData,\n}) => {\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [isAboveLoading, setIsAboveLoading] = useState(false);\n  const [acceptModalBtn, setAcceptModalBtn] = useState(false);\n  const [acceptData, setAcceptData] = useState({});\n\n  const history = useHistory();\n\n  const aboveLimit = async () => {\n    try {\n      const data = {\n        isWithinLimit: false,\n        work_flow_level: approveData.work_flow_level,\n      };\n      const loanAppId = approveData.loanAppId;\n\n      setIsAboveLoading((prev) => !prev);\n\n      const approveRejectApi = await approveOrRejectLoan(data, loanAppId);\n\n      if (approveRejectApi.error) return notify(approveRejectApi.data, \"error\");\n\n      notify(approveRejectApi.data.text, \"success\");\n      setApproveModalBtn((prev) => !prev);\n      setIsAboveLoading((prev) => !prev);\n      history.push(\"/pages/loanMan\");\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsAboveLoading((prev) => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: approveModalBtn ? 1 : 0,\n    transform: approveModalBtn ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  const handleAcceptModal = () => {\n    return (\n      <BookAndAcceptLoanModal\n        acceptModalBtn={acceptModalBtn}\n        setAcceptModalBtn={setAcceptModalBtn}\n        acceptData={acceptData}\n      />\n    );\n  };\n\n  const checkAcceptModal = () => {\n    setApproveModalBtn((prev) => !prev);\n    setAcceptModalBtn((prev) => !prev);\n\n    var data = {\n      limit: approveData.limit,\n      maxTerm: approveData.maxTerm,\n      loanAppId: approveData.loanAppId,\n      customerId: approveData.customerId,\n      applicationDate: approveData.applicationDate,\n      status: approveData.status,\n      narrative: approveData.narrative,\n      isWithinLimit: approveData.isWithinLimit,\n      email: approveData.email,\n      firstname: approveData.firstname,\n      lastname: approveData.lastname,\n      productName: approveData.productName,\n    };\n\n    setAcceptData(data);\n  };\n\n  return (\n    <>\n      {handleAcceptModal()}\n      {approveModalBtn ? (\n        <div className=\"appr-modal\">\n          <animated.div className=\"appr-inner\" style={animateModal}>\n            <div approveModalBtn={approveModalBtn}>\n              <button\n                className=\"btn appr-close-btn\"\n                onClick={() => setApproveModalBtn((prev) => !prev)}\n              >\n                <TimesCircleFill className=\"modal-cancel-icon\" />\n              </button>\n              <p className=\"appr-modal-text\">\n                Is the loan amount within your limit?\n              </p>\n              <div className=\"appr-modal-btn\">\n                <button\n                  className=\"btn approve-loan-btn first-btn\"\n                  onClick={checkAcceptModal}\n                >\n                  <CheckCircleFill /> &nbsp;\n                  {isAprroveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"Yes\"\n                  )}\n                </button>\n\n                <button className=\"btn reject-loan-btn\" onClick={aboveLimit}>\n                  <TimesCircleFill />\n                  {isAboveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"No\"\n                  )}\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport const NarrativeModal = ({\n  narrativeModalBtn,\n  setNarrativeModalBtn,\n  approveData,\n}) => {\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [count, setCount] = useState(false);\n  const [narrative, setNarrative] = useState(\"\");\n  const [countNum, setCountNum] = useState(120);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const history = useHistory();\n\n  const handleSetCount = () => {\n    setCount((prev) => !prev);\n  };\n\n  const handleRemoveCount = () => {\n    setCount(false);\n  };\n\n  const getNarrative = (e) => {\n    setNarrative(e.target.value);\n  };\n\n  const textCounter = () => {\n    //max charcater is 120\n    const maxAmount = 120;\n    //check if user is greater than max character\n    narrative.length > maxAmount\n      ? //if input is greater than max character set textarea to only have\n        //the amount of max character entered and nothing more\n        setNarrative(narrative.substring(0, maxAmount))\n      : //set count indicator value\n        setCountNum(maxAmount - narrative.length);\n\n    //enable button if input is valid and vice verse\n    const validText = narrative.trim();\n    validText.length > 20 ? setIsDisabled(false) : setIsDisabled(true);\n  };\n\n  const countValue =\n    countNum > 1\n      ? `${countNum} characters remaining`\n      : `${countNum} character remaining`;\n\n  const approveOrReject = async () => {\n    try {\n      const data = {\n        status: approveData.status,\n        narrative: narrative.trim(),\n        isWithinLimit: approveData.isWithinLimit,\n        email: approveData.email,\n        firstname: approveData.firstname,\n        lastname: approveData.lastname,\n        productName: approveData.productName,\n      };\n\n      const loanAppId = approveData.loanAppId;\n\n      console.log(data);\n\n      setIsApproveLoading((prev) => !prev);\n\n      const approveRejectApi = await approveOrRejectLoan(data, loanAppId);\n\n      if (approveRejectApi.error) return notify(approveRejectApi.data, \"error\");\n      console.log(data);\n\n      notify(`Loan Rejection successful`, \"success\");\n      setNarrativeModalBtn((prev) => !prev);\n      setIsApproveLoading((prev) => !prev);\n      history.push(\"/pages/loanMan\");\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsApproveLoading((prev) => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: narrativeModalBtn ? 1 : 0,\n    transform: narrativeModalBtn ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  return (\n    <>\n      {narrativeModalBtn ? (\n        <div className=\"appr-modal\">\n          <animated.div className=\"appr-inner\" style={animateModal}>\n            <div narrativeModalBtn={narrativeModalBtn}>\n              <button\n                className=\"btn appr-close-btn\"\n                onClick={() => setNarrativeModalBtn((prev) => !prev)}\n              >\n                <TimesCircleFill className=\"modal-cancel-icon\" />\n              </button>\n              <p className=\"appr-modal-text\">\n                State your reason for declining this loan request\n              </p>\n              <div>\n                <textarea\n                  onFocus={handleSetCount}\n                  onBlur={handleRemoveCount}\n                  rows=\"6\"\n                  className=\"narrative-text\"\n                  value={narrative}\n                  onChange={getNarrative}\n                  onKeyUp={textCounter}\n                  onKeyDown={textCounter}\n                ></textarea>\n                {count ? (\n                  <>\n                    <input\n                      className=\"text-count\"\n                      readOnly={true}\n                      type=\"text\"\n                      value={countValue}\n                    />\n                    <span></span>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div className=\"narr-modal-btn\">\n                <button\n                  className=\"btn approve-loan-btn first-btn\"\n                  onClick={approveOrReject}\n                  disabled={isDisabled}\n                >\n                  <CheckCircleFill />\n                  &nbsp; &nbsp;\n                  {isAprroveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"Submit\"\n                  )}\n                </button>\n                <button\n                  className=\"btn reject-loan-btn\"\n                  onClick={() => setNarrativeModalBtn((prev) => !prev)}\n                >\n                  <TimesCircleFill />\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport const BookAndAcceptLoanModal = ({\n  acceptModalBtn,\n  setAcceptModalBtn,\n  acceptData,\n}) => {\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [amount, setAmount] = useState(null);\n  const [tenure, setTenure] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const getAmount = (e) => {\n    setAmount(e.target.value);\n    if (amount && tenure) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n    setError(\"\");\n  };\n\n  const getTenure = (e) => {\n    setTenure(e.target.value);\n    if (amount && tenure) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n    setError(\"\");\n  };\n\n  const handleCancel = () => {\n    setAcceptModalBtn((prev) => !prev);\n    setAmount(null);\n    setTenure(null);\n    setIsDisabled(true);\n  };\n\n  const bookAndApprovedLoan = async () => {\n    try {\n      const data = {\n        narrative: acceptData.narrative,\n        isWithinLimit: acceptData.isWithinLimit,\n        status: acceptData.status,\n        email: acceptData.email,\n        firstname: acceptData.firstname,\n        lastname: acceptData.lastname,\n        productName: acceptData.productName,\n        approvedAmount: amount,\n        approvedTenure: tenure,\n        applicationDate: moment(acceptData.applicationDate).format(\"LL\"),\n      };\n\n      const loanAppId = acceptData.loanAppId;\n      //   const customerId = acceptData.customerId;\n      const limit = acceptData.limit;\n      const maxTerm = acceptData.maxTerm;\n\n      if (amount > limit) {\n        setError(`Amount should not exceed ${limit}`);\n        return;\n      }\n      if (tenure > maxTerm) {\n        setError(`Maximun tenure is ${maxTerm} months`);\n        return;\n      }\n\n      setIsApproveLoading((prev) => !prev);\n      setError(\"\");\n\n      console.log(data);\n\n      const bookLoan = await approveOrRejectLoan(data, loanAppId);\n\n      if (bookLoan.error) {\n        console.log(bookLoan);\n        return notify(bookLoan.data, \"error\");\n      }\n\n      notify(`Loan Approval successful`, \"success\");\n      setAcceptModalBtn((prev) => !prev);\n      setIsApproveLoading((prev) => !prev);\n      history.push(\"/pages/customers\");\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsApproveLoading((prev) => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: acceptModalBtn ? 1 : 0,\n    transform: acceptModalBtn ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  return (\n    <>\n      {acceptModalBtn ? (\n        <div className=\"appr-modal\">\n          <animated.div className=\"appr-inner\" style={animateModal}>\n            <div acceptModalBtn={acceptModalBtn}>\n              <button className=\"btn appr-close-btn\" onClick={handleCancel}>\n                <TimesCircleFill className=\"modal-cancel-icon\" />\n              </button>\n              <p className=\"accept-error\">{error}</p>\n              <div className=\"accept-input\">\n                <div>\n                  <label>Approved Amount</label>\n                  <input\n                    className=\"amount-input\"\n                    type=\"number\"\n                    placeholder=\"Amount\"\n                    value={amount}\n                    onChange={getAmount}\n                  />\n                </div>\n\n                <div>\n                  <label>Approved Tenure</label>\n                  <input\n                    className=\"month-input\"\n                    type=\"number\"\n                    placeholder=\"In months\"\n                    value={tenure}\n                    onChange={getTenure}\n                  />\n                </div>\n              </div>\n              <div className=\"narr-modal-btn\">\n                <button\n                  className=\"btn approve-loan-btn first-btn\"\n                  onClick={bookAndApprovedLoan}\n                  disabled={isDisabled}\n                >\n                  <CheckCircleFill />\n                  &nbsp; &nbsp;\n                  {isAprroveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"Submit\"\n                  )}\n                </button>\n                <button className=\"btn reject-loan-btn\" onClick={handleCancel}>\n                  <TimesCircleFill />\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport const DisburseModal = ({\n  disburseModalBtn,\n  setDisburseModalBtn,\n  approveData,\n}) => {\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [loanProducts, setLoanProducts] = useState([]);\n\n  // useEffect(() => {\n  //   handleLoanProducts();\n  // }, []);\n\n  // const handleLoanProducts = async () => {\n  //   try {\n  //     const companyCode = `NG0020001`;\n  //     const products = await getLoanProducts(companyCode);\n\n  //     console.log(products);\n\n  //     if (products.error) return notify(products.message, \"error\");\n  //     setLoanProducts(products.data?.result?.data?.products);\n  //   } catch (error) {\n  //     console.log(error);\n  //     notify(\"Something went wrong\", \"error\");\n  //   }\n  // };\n\n  // const history = useHistory();\n\n  const disburse = async () => {\n    //   try {\n    //     const today = new Date();\n    //     const requestData = {\n    //       inputDate: moment(today).format(\"YYYYMMDD\"),\n    //       customerType: \"INDIVIDUAL\",\n    //       customerId: `${approveData.customerId}`,\n    //       loanAction: \"\",\n    //       loanProduct: \"\",\n    //       amountRequested: approveData.approvedAmount,\n    //       currency: \"NGN\",\n    //       interestRate: approveData.interestRate,\n    //       termRequested: approveData.approvedTenure,\n    //       loanPurpose: \"1\",\n    //       sector: \"10\",\n    //       guarantorId: approveData.guarantorId,\n    //       disburseAccount: approveData.accountNo,\n    //       repayAccount: approveData.accountNo,\n    //       chargeAccount: approveData.accountNo,\n    //     };\n    //     console.log(requestData);\n    //     loanProducts &&\n    //       loanProducts.forEach((product) => {\n    //         if (product.productDescription === approveData.productName) {\n    //           requestData.loanAction = product.productCode;\n    //           requestData.loanProduct = product.productCode;\n    //         }\n    //       });\n    //     var data = {\n    //       email: approveData.email,\n    //       firstname: approveData.firstname,\n    //       lastname: approveData.lastname,\n    //       productName: approveData.productName,\n    //       sn: \"\",\n    //       accountNo: \"\",\n    //       settlementAccount: \"\",\n    //       loanID: \"\",\n    //       customerName: \"\",\n    //       productCategory: \"\",\n    //       productType: approveData.productType,\n    //       customerType: approveData.customerType,\n    //       sector: approveData.sector,\n    //       dateGranted: \"\",\n    //       expiryDate: approveData.expiryDate,\n    //       tenorInDays: \"\",\n    //       legacyID: approveData.legacyID,\n    //       authorizedLimit: \"\",\n    //       disbursedAmount: \"\",\n    //       arrangementFee: \"\",\n    //       outstandingBalance: \"\",\n    //       interestReceivable: \"\",\n    //       grossLoans: \"\",\n    //       riskRating: \"\",\n    //       pastDueObligationPrincipal: \"\",\n    //       numberOfPaymentsOutstanding: approveData.numberOfPaymentsOutstanding,\n    //       daysPastDue: approveData.daysPastDue,\n    //       pastDueObligationInterest: approveData.pastDueObligationInterest,\n    //       subStatus: approveData.subStatus,\n    //       status: approveData.status,\n    //       contratualIntRate: approveData.contratualIntRate,\n    //       annualEffectiveInterestRate: approveData.annualEffectiveInterestRate,\n    //       restructure: approveData.restructure,\n    //       paymentFrequencyPrincipal: approveData.paymentFrequencyPrincipal,\n    //       paymentFreqInterest: approveData.paymentFreqInterest,\n    //       collateralStatus: approveData.collateralStatus,\n    //       collateralType: approveData.collateralType,\n    //       otherCollateral: approveData.otherCollateral,\n    //       collateralvalue: approveData.collateralvalue,\n    //       daysToRealization: approveData.daysToRealization,\n    //     };\n    //     // setIsApproveLoading((prev) => !prev);\n    //     const loanAppId = approveData.loanAppId;\n    //     // const loanRequest = await loanRequestBooking(requestData);\n    //     console.log(\"clicked\", requestData);\n    // if (loanRequest?.data?.error === true) {\n    //   setIsApproveLoading((prev) => !prev);\n    //   notify(loanRequest?.data?.message, \"error\");\n    //   return;\n    // }\n    // if (loanRequest?.data?.error === true) {\n    //   setIsApproveLoading((prev) => !prev);\n    //   notify(loanRequest?.data?.message, \"error\");\n    //   return;\n    // }\n    // if (loanRequest?.data?.data?.data?.status === true) {\n    //   data.loanID = loanRequest.data.ApplicationId;\n    //   const loanAccount = approveData.account_no;\n    //   const loanDetails = await getLoanDetails(loanAccount);\n    //   console.log(loanDetails);\n    //   if (loanDetails?.data?.data?.data?.status === false) {\n    //     setIsApproveLoading((prev) => !prev);\n    //     notify(loanDetails?.data?.data?.data?.message, \"error\");\n    //     return;\n    //   }\n    //   if (loanDetails?.data?.data?.data?.status === true) {\n    //     data.productCategory = loanDetails.data.loanProduct;\n    //     data.dateGranted = loanDetails.data.dateDisbursed;\n    //     data.outstandingBalance = loanDetails.data.amountDisbursed;\n    //     data.interestReceivable = loanDetails.data.interestReceivable;\n    //     data.grossLoans = loanDetails.data.amountDisbursed;\n    //     data.pastDueObligationPrincipal = loanDetails.data.overdueBalance;\n    //     data.disbursedAmount = loanDetails.data.amountDisbursed;\n    //     const disburse = await disburseLoan(data, loanAppId);\n    //     if (disburse.error) {\n    //       setIsApproveLoading((prev) => !prev);\n    //       notify(disburse.data, \"error\");\n    //       return;\n    //     }\n    //     console.log(data);\n    //     notify(`Loan disbursed successfully`, \"success\");\n    //     setDisburseModalBtn((prev) => !prev);\n    //     setIsApproveLoading((prev) => !prev);\n    //     history.push(\"/pages/loanMan\");\n    //     return;\n    //   }\n    // }\n    // notify(`Something went wrong`, \"error\");\n    // setTimeout(() => {\n    //   // setIsApproveLoading((prev) => !prev);\n    //   setDisburseModalBtn((prev) => !prev);\n    // }, 6000);\n    //     // return;\n    //   } catch (error) {\n    //     notify(error.data, \"error\");\n    //     // setIsApproveLoading(false);\n    //     setTimeout(() => {\n    //       setDisburseModalBtn((prev) => !prev);\n    //     }, 6000);\n    //     return;\n    //   }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: disburseModalBtn ? 1 : 0,\n    transform: disburseModalBtn ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  return (\n    <>\n      {disburseModalBtn ? (\n        <div className=\"appr-modal\">\n          <animated.div className=\"appr-inner\" style={animateModal}>\n            <div disburseModalBtn={disburseModalBtn}>\n              <button\n                className=\"btn appr-close-btn\"\n                onClick={() => setDisburseModalBtn((prev) => !prev)}\n              >\n                <TimesCircleFill className=\"modal-cancel-icon\" />\n              </button>\n              <p className=\"appr-modal-text\">Proceed with loan disbursement?</p>\n              <div className=\"appr-modal-btn\">\n                <button\n                  className=\"btn approve-loan-btn first-btn\"\n                  onClick={disburse}\n                >\n                  <CheckCircleFill /> &nbsp;\n                  {isAprroveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"Yes\"\n                  )}\n                </button>\n\n                <button\n                  className=\"btn reject-loan-btn\"\n                  onClick={() => {\n                    setDisburseModalBtn((prev) => !prev);\n                    setIsApproveLoading((prev) => !prev);\n                  }}\n                >\n                  <TimesCircleFill />\n                  No\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport const AcceptLoanModal = ({\n  acceptLoanModalBtn,\n  setAcceptLoanModalBtn,\n  approveData,\n}) => {\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n\n  const acceptLoan = async () => {\n    try {\n      const data = {\n        isWithinLimit: false,\n        work_flow_level: 1,\n      };\n      const loanAppId = approveData.loanAppId;\n\n      setIsApproveLoading((prev) => !prev);\n\n      const approveRejectApi = await approveOrRejectLoan(data, loanAppId);\n\n      if (approveRejectApi.error) return notify(approveRejectApi.data, \"error\");\n\n      notify(approveRejectApi.data.text, \"success\");\n      setAcceptLoanModalBtn((prev) => !prev);\n      setIsApproveLoading((prev) => !prev);\n      window.location.reload();\n    } catch (error) {\n      notify(error.data, \"error\");\n      setIsApproveLoading((prev) => !prev);\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: acceptLoanModalBtn ? 1 : 0,\n    transform: acceptLoanModalBtn ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  return (\n    <>\n      {acceptLoanModalBtn ? (\n        <div className=\"appr-modal\">\n          <animated.div className=\"appr-inner\" style={animateModal}>\n            <div acceptLoanModalBtn={acceptLoanModalBtn}>\n              <button\n                className=\"btn appr-close-btn\"\n                onClick={() => setAcceptLoanModalBtn((prev) => !prev)}\n              >\n                <TimesCircleFill className=\"modal-cancel-icon\" />\n              </button>\n              <p className=\"appr-modal-text\">Proceed to loan acceptance?</p>\n\n              <div className=\"appr-modal-btn\">\n                <button\n                  className=\"btn approve-loan-btn first-btn\"\n                  onClick={acceptLoan}\n                >\n                  <CheckCircleFill />\n                  &nbsp; &nbsp;\n                  {isAprroveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"Proceed\"\n                  )}\n                </button>\n                <button\n                  className=\"btn reject-loan-btn\"\n                  onClick={() => setAcceptLoanModalBtn((prev) => !prev)}\n                >\n                  <TimesCircleFill />\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport const CommentModal = ({\n  commentModalBtn,\n  setCommentModalBtn,\n  commentData,\n}) => {\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const [count, setCount] = useState(false);\n  const [countNum, setCountNum] = useState(1000);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [branch, setBranch] = useState([]);\n  const [staffBranch, setStaffBranch] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [getAdmin, setGetAdmin] = useState({});\n  const [adminName, setAdminName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const roles = getAdminRoles();\n\n  const email = getAdminEmail();\n\n  useEffect(() => {\n    const handleSearchAdmin = async () => {\n      setLoading(true);\n      try {\n        const response = await searchAdminProfile(email);\n        const result = await getBranches();\n\n        if (response.data.status) {\n          setGetAdmin(response.data.data);\n          setBranch(result.data);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    handleSearchAdmin();\n  }, [email]);\n\n  useEffect(() => {\n    setAdminName(`${getAdmin.firstname} ${getAdmin.lastname}`);\n\n    branch &&\n      branch.forEach((option) => {\n        if (parseInt(getAdmin.branch) === option.id) {\n          setStaffBranch(option.name);\n        }\n      });\n  }, [branch, getAdmin.branch, getAdmin.firstname, getAdmin.lastname]);\n\n  const handleSetCount = () => {\n    setCount((prev) => !prev);\n  };\n\n  const handleRemoveCount = () => {\n    setCount(false);\n  };\n\n  const getComment = (e) => setComment(e.target.value);\n\n  const textCounter = () => {\n    //max charcater is 120\n    const maxAmount = 1000;\n    //check if user is greater than max character\n    comment.length > maxAmount\n      ? //if input is greater than max character set textarea to only have\n        //the amount of max character entered and nothing more\n        setComment(comment.substring(0, maxAmount))\n      : //set count indicator value\n        setCountNum(maxAmount - comment.length);\n\n    //enable button if input is valid and vice verse\n    const validText = comment.trim();\n    validText.length > 20 ? setIsDisabled(false) : setIsDisabled(true);\n  };\n\n  const countValue =\n    countNum > 1\n      ? `${countNum} characters remaining`\n      : `${countNum} character remaining`;\n\n  const addLoanOfficerComment = async () => {\n    try {\n      const data = {\n        staffId: getAdmin.staff_id,\n        comment:\n          roles === \"AUDIT\"\n            ? `AUDITOR'S COMMENT: ${comment.trim()}`\n            : comment.trim(),\n        rank: getAdmin.rank,\n        fullName: adminName,\n        staffEmail: email,\n        staffBranch: staffBranch,\n        loanAppId: commentData.loanAppId,\n      };\n\n      setIsApproveLoading((prev) => !prev);\n\n      const response = await addComment(data);\n\n      if (response.error) return notify(response.data, \"error\");\n\n      notify(`Comment added successfully`, \"success\");\n\n      setIsApproveLoading((prev) => !prev);\n      setTimeout(() => {\n        setCommentModalBtn((prev) => !prev);\n        window.location.reload();\n      }, 2500);\n      return;\n    } catch (error) {\n      notify(error.message, \"error\");\n      setIsApproveLoading((prev) => !prev);\n      return;\n    }\n  };\n\n  const animateModal = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: commentModalBtn ? 1 : 0,\n    transform: commentModalBtn ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  return (\n    <>\n      {commentModalBtn ? (\n        <div className=\"appr-modal\">\n          <animated.div className=\"comment-inner\" style={animateModal}>\n            <div commentModalBtn={commentModalBtn}>\n              <button\n                className=\"btn appr-close-btn\"\n                onClick={() => setCommentModalBtn((prev) => !prev)}\n              >\n                <TimesCircleFill className=\"modal-cancel-icon\" />\n              </button>\n              <p className=\"appr-modal-text\">Add your comment</p>\n              <form>\n                <div\n                // className={`form-group${\n                //   isInputFocused.email ? \" input-focused\" : \"\"\n                // }`}\n                >\n                  <label htmlFor=\"staffID\">Staff ID</label>\n                  <input\n                    type=\"text\"\n                    name=\"staff_id\"\n                    id=\"staff_id\"\n                    className=\"form-control\"\n                    defaultValue={loading ? \"Loading...\" : getAdmin.staff_id}\n                    readOnly={true}\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"name\">Full Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"fullName\"\n                    id=\"fullName\"\n                    className=\"form-control\"\n                    readOnly={true}\n                    defaultValue={loading ? \"Loading...\" : adminName}\n                  />\n                </div>\n                <div\n                // className={`form-group${\n                //   isInputFocused.email ? \" input-focused\" : \"\"\n                // }`}\n                >\n                  <label htmlFor=\"rank\">Rank</label>\n                  <input\n                    type=\"text\"\n                    name=\"rank\"\n                    id=\"rank\"\n                    className=\"form-control\"\n                    readOnly={true}\n                    defaultValue={loading ? \"Loading...\" : getAdmin.rank}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"branch\">Branch</label>\n                  <input\n                    type=\"text\"\n                    name=\"branch\"\n                    id=\"branch\"\n                    className=\"form-control\"\n                    readOnly={true}\n                    defaultValue={loading ? \"Loading...\" : staffBranch}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"comment\">Comment</label>\n                  <textarea\n                    onFocus={handleSetCount}\n                    onBlur={handleRemoveCount}\n                    rows=\"10\"\n                    className=\"narrative-text\"\n                    value={comment}\n                    onChange={getComment}\n                    onKeyUp={textCounter}\n                    onKeyDown={textCounter}\n                  ></textarea>\n                  {count ? (\n                    <>\n                      <input\n                        className=\"text-count\"\n                        readOnly={true}\n                        type=\"text\"\n                        value={countValue}\n                      />\n                      <span></span>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </form>\n              <div className=\"narr-modal-btn\">\n                <button\n                  className=\"btn approve-loan-btn first-btn\"\n                  onClick={addLoanOfficerComment}\n                  disabled={isDisabled}\n                >\n                  <CheckCircleFill />\n                  &nbsp; &nbsp;\n                  {isAprroveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"Submit\"\n                  )}\n                </button>\n                <button\n                  className=\"btn reject-loan-btn\"\n                  onClick={() => setCommentModalBtn((prev) => !prev)}\n                >\n                  <TimesCircleFill />\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport const DeleteModal = ({\n  deleteModalBtn,\n  setDeleteModalBtn,\n  deleteData,\n}) => {\n  const history = useHistory();\n  const [isAprroveLoading, setIsApproveLoading] = useState(false);\n  const animateModal = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: deleteModalBtn ? 1 : 0,\n    transform: deleteModalBtn ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  const handleDeleteProfile = async () => {\n    setIsApproveLoading(true);\n    try {\n      const id = deleteData.id;\n\n      const response = await deleteAdminAccount(id);\n\n      if (response.error) {\n        notify(response.message, \"error\");\n        setIsApproveLoading(false);\n        return;\n      }\n      notify(response.message, \"success\");\n      setIsApproveLoading(false);\n      history.push(\"/pages/superAdmin\");\n      return;\n    } catch (error) {\n      notify(\"Something went wrong\", \"success\");\n      setIsApproveLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <>\n      {deleteModalBtn ? (\n        <div className=\"appr-modal\">\n          <animated.div className=\"appr-inner\" style={animateModal}>\n            <div deleteModalBtn={deleteModalBtn}>\n              <button\n                className=\"btn appr-close-btn\"\n                onClick={() => setDeleteModalBtn((prev) => !prev)}\n              >\n                <TimesCircleFill className=\"modal-cancel-icon\" />\n              </button>\n              <p className=\"appr-modal-text\">\n                {`Are you sure you want to delete ${deleteData.adminName}'s ${\n                  deleteData.adminRole ? deleteData.adminRole : \"\"\n                } profile?`}\n              </p>\n\n              <div className=\"narr-modal-btn\">\n                <button\n                  className=\"btn approve-loan-btn first-btn\"\n                  onClick={handleDeleteProfile}\n                  disabled={isAprroveLoading ? true : false}\n                >\n                  <CheckCircleFill />\n                  &nbsp; &nbsp;\n                  {isAprroveLoading ? (\n                    <SpinnerIcon className=\"limit-loading rotating\" />\n                  ) : (\n                    \"Delete\"\n                  )}\n                </button>\n                <button\n                  className=\"btn reject-loan-btn\"\n                  onClick={() => setDeleteModalBtn((prev) => !prev)}\n                >\n                  <TimesCircleFill />\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}