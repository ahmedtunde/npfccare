{"ast":null,"code":"import _regeneratorRuntime from\"/Users/xerde2/Downloads/npf-admin-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/xerde2/Downloads/npf-admin-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/xerde2/Downloads/npf-admin-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import apiClient from\"../utils/apiClient\";import{setLoanToken,setRoles,setToken,setLoanRoles,setBranchId,setAdminEmail,setAdminName}from\"../utils/localStorageService\";import notify from\"../utils/notification\";export var signInAdmin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var response,_response$data,token,roles,loanRoles,branch,adminName;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return apiClient.post(\"/auth/admin_sign_in\",{email:email,password:password});case 3:response=_context.sent;_response$data=response.data,token=_response$data.token,roles=_response$data.roles,loanRoles=_response$data.loanRoles,branch=_response$data.branch,adminName=_response$data.adminName;console.log(response);if(!(response.data.statusCode&&response.data.statusCode===401)){_context.next=9;break;}notify(response.data.message,\"error\");return _context.abrupt(\"return\");case 9:setToken(token);setRoles(_toConsumableArray(roles));setLoanToken(token);setLoanRoles(_toConsumableArray(loanRoles));setBranchId(branch);setAdminEmail(email);setAdminName(adminName);return _context.abrupt(\"return\",response.data);case 19:_context.prev=19;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",Promise.reject(_context.t0));case 22:case\"end\":return _context.stop();}}},_callee,null,[[0,19]]);}));return function signInAdmin(_x,_x2){return _ref.apply(this,arguments);};}();export var resetAdminPassword=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(old_password,new_password){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return apiClient.post(\"/auth/change_admin_password\",{old_password:old_password,new_password:new_password});case 3:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",Promise.reject(_context2.t0));case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function resetAdminPassword(_x3,_x4){return _ref2.apply(this,arguments);};}();export var initiatePasswordRest=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return apiClient.post(\"/auth/initiate_admin_password_reset\",{});case 3:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",Promise.reject(_context3.t0));case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function initiatePasswordRest(){return _ref3.apply(this,arguments);};}();export var generateCustomerToken=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(customer_id){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return apiClient.post(\"/auth/user_admin_auth\",{customer_id:customer_id});case 3:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",Promise.reject(_context4.t0));case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function generateCustomerToken(_x5){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/services/authService.js"],"names":["apiClient","setLoanToken","setRoles","setToken","setLoanRoles","setBranchId","setAdminEmail","setAdminName","notify","signInAdmin","email","password","post","response","data","token","roles","loanRoles","branch","adminName","console","log","statusCode","message","Promise","reject","resetAdminPassword","old_password","new_password","initiatePasswordRest","generateCustomerToken","customer_id"],"mappings":"ydAAA,MAAOA,CAAAA,SAAP,KAAsB,oBAAtB,CACA,OACEC,YADF,CAEEC,QAFF,CAGEC,QAHF,CAIEC,YAJF,CAKEC,WALF,CAMEC,aANF,CAOEC,YAPF,KAQO,8BARP,CASA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CAEA,MAAO,IAAMC,CAAAA,WAAW,0FAAG,iBAAOC,KAAP,CAAcC,QAAd,2NAEAX,CAAAA,SAAS,CAACY,IAAV,CAAe,qBAAf,CAAsC,CAC3DF,KAAK,CAALA,KAD2D,CAE3DC,QAAQ,CAARA,QAF2D,CAAtC,CAFA,QAEjBE,QAFiB,8BAMgCA,QAAQ,CAACC,IANzC,CAMfC,KANe,gBAMfA,KANe,CAMRC,KANQ,gBAMRA,KANQ,CAMDC,SANC,gBAMDA,SANC,CAMUC,MANV,gBAMUA,MANV,CAMkBC,SANlB,gBAMkBA,SANlB,CAQvBC,OAAO,CAACC,GAAR,CAAYR,QAAZ,EARuB,KAUnBA,QAAQ,CAACC,IAAT,CAAcQ,UAAd,EAA4BT,QAAQ,CAACC,IAAT,CAAcQ,UAAd,GAA6B,GAVtC,0BAWrBd,MAAM,CAACK,QAAQ,CAACC,IAAT,CAAcS,OAAf,CAAwB,OAAxB,CAAN,CAXqB,wCAevBpB,QAAQ,CAACY,KAAD,CAAR,CACAb,QAAQ,oBAAKc,KAAL,EAAR,CACAf,YAAY,CAACc,KAAD,CAAZ,CACAX,YAAY,oBAAKa,SAAL,EAAZ,CACAZ,WAAW,CAACa,MAAD,CAAX,CACAZ,aAAa,CAACI,KAAD,CAAb,CACAH,YAAY,CAACY,SAAD,CAAZ,CArBuB,gCAuBhBN,QAAQ,CAACC,IAvBO,4FAyBhBU,OAAO,CAACC,MAAR,aAzBgB,uEAAH,kBAAXhB,CAAAA,WAAW,gDAAjB,CA6BP,MAAO,IAAMiB,CAAAA,kBAAkB,2FAAG,kBAAOC,YAAP,CAAqBC,YAArB,2KAEP5B,CAAAA,SAAS,CAACY,IAAV,CAAe,6BAAf,CAA8C,CACnEe,YAAY,CAAZA,YADmE,CAEnEC,YAAY,CAAZA,YAFmE,CAA9C,CAFO,QAExBf,QAFwB,iDAQvBA,QAAQ,CAACC,IARc,8FAUvBU,OAAO,CAACC,MAAR,cAVuB,wEAAH,kBAAlBC,CAAAA,kBAAkB,kDAAxB,CAcP,MAAO,IAAMG,CAAAA,oBAAoB,2FAAG,6LAET7B,CAAAA,SAAS,CAACY,IAAV,CACrB,qCADqB,CAErB,EAFqB,CAFS,QAE1BC,QAF0B,iDAMzBA,QAAQ,CAACC,IANgB,8FAQzBU,OAAO,CAACC,MAAR,cARyB,wEAAH,kBAApBI,CAAAA,oBAAoB,2CAA1B,CAYP,MAAO,IAAMC,CAAAA,qBAAqB,2FAAG,kBAAOC,WAAP,2KAEV/B,CAAAA,SAAS,CAACY,IAAV,CAAe,uBAAf,CAAwC,CAC7DmB,WAAW,CAAXA,WAD6D,CAAxC,CAFU,QAE3BlB,QAF2B,iDAK1BA,QAAQ,CAACC,IALiB,8FAO1BU,OAAO,CAACC,MAAR,cAP0B,wEAAH,kBAArBK,CAAAA,qBAAqB,8CAA3B","sourcesContent":["import apiClient from \"../utils/apiClient\";\nimport {\n  setLoanToken,\n  setRoles,\n  setToken,\n  setLoanRoles,\n  setBranchId,\n  setAdminEmail,\n  setAdminName,\n} from \"../utils/localStorageService\";\nimport notify from \"../utils/notification\";\n\nexport const signInAdmin = async (email, password) => {\n  try {\n    const response = await apiClient.post(\"/auth/admin_sign_in\", {\n      email,\n      password,\n    });\n    const { token, roles, loanRoles, branch, adminName } = response.data;\n\n    console.log(response);\n\n    if (response.data.statusCode && response.data.statusCode === 401) {\n      notify(response.data.message, \"error\");\n      return;\n    }\n\n    setToken(token);\n    setRoles([...roles]);\n    setLoanToken(token);\n    setLoanRoles([...loanRoles]);\n    setBranchId(branch);\n    setAdminEmail(email);\n    setAdminName(adminName);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const resetAdminPassword = async (old_password, new_password) => {\n  try {\n    const response = await apiClient.post(\"/auth/change_admin_password\", {\n      old_password,\n      new_password,\n    });\n    //const token = response.data.token;\n    //setToken(token);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const initiatePasswordRest = async () => {\n  try {\n    const response = await apiClient.post(\n      \"/auth/initiate_admin_password_reset\",\n      {}\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const generateCustomerToken = async (customer_id) => {\n  try {\n    const response = await apiClient.post(\"/auth/user_admin_auth\", {\n      customer_id,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}