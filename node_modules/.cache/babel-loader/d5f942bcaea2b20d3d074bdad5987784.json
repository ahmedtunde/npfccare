{"ast":null,"code":"import apiClient from \"../utils/apiClient\";\nexport const createAdmin = async (email, password) => {\n  try {\n    const response = await apiClient.post(\"/admin/create_admin_profile\", {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const mapAdminRole = async (name, roleId, adminUserId) => {\n  try {\n    const response = await apiClient.post(\"/admin/assign_role\", {\n      name,\n      roleId,\n      adminUserId\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const createAdminRole = async name => {\n  try {\n    const response = await apiClient.post(\"/admin/create_role\", {\n      name\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getCustomersInfo = async (page, limit) => {\n  try {\n    const response = await apiClient.get(`/admin/get_customers_info?page=${page}&limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getCustomerDetails = async id => {\n  try {\n    const response = await apiClient.get(`/admin/get_customer_info/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const searchCustomerDetails = async email => {\n  try {\n    const response = await apiClient.get(`/admin/search_customer_email?email=${email}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getAllAdminProfiles = async (page, limit) => {\n  try {\n    const response = await apiClient.get(`/admin/get_admin_accounts?page=${page}&limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getAdminProfileDetails = async id => {\n  try {\n    const response = await apiClient.get(`/admin/get_admin_account/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const searchAdminProfile = async email => {\n  try {\n    const response = await apiClient.get(`/admin/search_admin_email?email=${email}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getAdminRoles = async () => {\n  try {\n    const response = await apiClient.get(`/admin/view_roles`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const createAdminProfile = async payload => {\n  try {\n    const {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank\n    } = payload;\n    const response = await apiClient.post(\"/admin/create_admin_profile\", {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const updateAdminProfile = async (id, payload) => {\n  try {\n    const {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank\n    } = payload;\n    const response = await apiClient.put(`/admin/update_admin_account/${id}`, {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const editCustomerInfo = async (id, payload) => {\n  try {\n    const {\n      email,\n      firstname,\n      middlename,\n      lastname,\n      phone,\n      bvnhash,\n      transfer_limit,\n      dob,\n      pob,\n      branch,\n      gender,\n      rank,\n      genotype,\n      blood_group,\n      security_number,\n      nhis_number\n    } = payload;\n    const response = await apiClient.put(`/admin/edit_customer_info/${id}`, {\n      email,\n      firstname,\n      middlename,\n      lastname,\n      phone,\n      bvnhash,\n      dob,\n      pob,\n      branch,\n      gender,\n      rank,\n      genotype,\n      blood_group,\n      security_number,\n      nhis_number\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const deleteAdminAccount = async id => {\n  try {\n    const response = await apiClient.delete(`/admin/delete_admin_account/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/services/adminService.js"],"names":["apiClient","createAdmin","email","password","response","post","data","error","Promise","reject","mapAdminRole","name","roleId","adminUserId","createAdminRole","getCustomersInfo","page","limit","get","getCustomerDetails","id","searchCustomerDetails","getAllAdminProfiles","getAdminProfileDetails","searchAdminProfile","getAdminRoles","createAdminProfile","payload","firstName","lastName","phoneNumber","branchId","roleName","loanOfficerCode","staffId","rank","updateAdminProfile","put","editCustomerInfo","firstname","middlename","lastname","phone","bvnhash","transfer_limit","dob","pob","branch","gender","genotype","blood_group","security_number","nhis_number","deleteAdminAccount","delete"],"mappings":"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","sourcesContent":["import apiClient from \"../utils/apiClient\";\n\nexport const createAdmin = async (email, password) => {\n  try {\n    const response = await apiClient.post(\"/admin/create_admin_profile\", {\n      email,\n      password,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const mapAdminRole = async (name, roleId, adminUserId) => {\n  try {\n    const response = await apiClient.post(\"/admin/assign_role\", {\n      name,\n      roleId,\n      adminUserId,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const createAdminRole = async (name) => {\n  try {\n    const response = await apiClient.post(\"/admin/create_role\", { name });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getCustomersInfo = async (page, limit) => {\n  try {\n    const response = await apiClient.get(\n      `/admin/get_customers_info?page=${page}&limit=${limit}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getCustomerDetails = async (id) => {\n  try {\n    const response = await apiClient.get(`/admin/get_customer_info/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const searchCustomerDetails = async (email) => {\n  try {\n    const response = await apiClient.get(\n      `/admin/search_customer_email?email=${email}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getAllAdminProfiles = async (page, limit) => {\n  try {\n    const response = await apiClient.get(\n      `/admin/get_admin_accounts?page=${page}&limit=${limit}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getAdminProfileDetails = async (id) => {\n  try {\n    const response = await apiClient.get(`/admin/get_admin_account/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const searchAdminProfile = async (email) => {\n  try {\n    const response = await apiClient.get(\n      `/admin/search_admin_email?email=${email}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getAdminRoles = async () => {\n  try {\n    const response = await apiClient.get(`/admin/view_roles`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const createAdminProfile = async (payload) => {\n  try {\n    const {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank,\n    } = payload;\n    const response = await apiClient.post(\"/admin/create_admin_profile\", {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const updateAdminProfile = async (id, payload) => {\n  try {\n    const {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank,\n    } = payload;\n    const response = await apiClient.put(`/admin/update_admin_account/${id}`, {\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      branchId,\n      roleName,\n      roleId,\n      loanOfficerCode,\n      staffId,\n      rank,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const editCustomerInfo = async (id, payload) => {\n  try {\n    const {\n      email,\n      firstname,\n      middlename,\n      lastname,\n      phone,\n      bvnhash,\n      transfer_limit,\n      dob,\n      pob,\n      branch,\n      gender,\n      rank,\n      genotype,\n      blood_group,\n      security_number,\n      nhis_number,\n    } = payload;\n    const response = await apiClient.put(`/admin/edit_customer_info/${id}`, {\n      email,\n      firstname,\n      middlename,\n      lastname,\n      phone,\n      bvnhash,\n      \n      dob,\n      pob,\n      branch,\n      gender,\n      rank,\n      genotype,\n      blood_group,\n      security_number,\n      nhis_number,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const deleteAdminAccount = async (id) => {\n  try {\n    const response = await apiClient.delete(\n      `/admin/delete_admin_account/${id}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}