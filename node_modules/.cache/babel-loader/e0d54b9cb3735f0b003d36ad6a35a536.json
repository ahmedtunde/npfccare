{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xerde2/Downloads/npf-admin-web/src/components/resetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from '../assets/img/logo-main.png';\nimport { ReactComponent as ArrowRightCircle } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/arrow-right-circle.svg\";\nimport { ReactComponent as EyeFill } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/eye-fill.svg\";\nimport { ReactComponent as EyeSlashFill } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/eye-slash-fill.svg\";\nimport { ReactComponent as SpinnerIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/spinner.svg\";\nimport { useHistory } from 'react-router-dom';\nimport notify from '../utils/notification';\nimport { resetAdminPassword } from '../services/authService';\n\nconst ResetPassword = props => {\n  _s();\n\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showOldPassword, setShowOldPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isInputFocused, setInputFocused] = useState({\n    oldPassword: false,\n    newPassword: false,\n    confirmPassword: false\n  });\n  const [userInputs, setInputs] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [isLoading, setLoading] = useState(false);\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n  useEffect(() => {\n    //remove modal reminants\n    const body = document.querySelector('body');\n    body.classList.remove(\"modal-open\");\n    body.style.paddingRight = \"\";\n    const modalBackdrop = document.querySelector(\".modal-backdrop\");\n    if (modalBackdrop) modalBackdrop.remove();\n  }, []);\n\n  const handleShowPassword = target => {\n    if (target === \"new\") {\n      setShowNewPassword(prev => !prev);\n    } else if (target === \"confirm\") {\n      setShowConfirmPassword(prev => !prev);\n    } else {\n      setShowOldPassword(prev => !prev);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginErrorMessage(\"\");\n    setInputs(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleInputFocused = e => {\n    const {\n      name\n    } = e.target;\n    setInputFocused(prev => ({ ...prev,\n      [name]: true\n    }));\n  };\n\n  const handleInputBlur = e => {\n    const {\n      name\n    } = e.target;\n    setInputFocused(prev => ({ ...prev,\n      [name]: false\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setLoginErrorMessage(\"\");\n\n    try {\n      const result = await resetAdminPassword(userInputs.oldPassword, userInputs.newPassword);\n      setLoading(false);\n      if (result.error) return setLoginErrorMessage(result.message);\n      notify(result.message, \"success\", () => {\n        setInputs({\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\"\n        });\n      });\n    } catch (error) {\n      var _error$toLowerCase, _error$toLowerCase$ca, _error$toLowerCase$ca2, _error$message, _error$message$toLowe, _error$message$toLowe2, _error$message$toLowe3, _error$message2, _error$message2$toLow, _error$message2$toLow2, _error$message2$toLow3;\n\n      setLoading(false);\n      const msg = (error === null || error === void 0 ? void 0 : (_error$toLowerCase = error.toLowerCase) === null || _error$toLowerCase === void 0 ? void 0 : (_error$toLowerCase$ca = (_error$toLowerCase$ca2 = _error$toLowerCase.call(error)).includes) === null || _error$toLowerCase$ca === void 0 ? void 0 : _error$toLowerCase$ca.call(_error$toLowerCase$ca2, \"unauth\")) ? \"Unauthorized.\" : (error === null || error === void 0 ? void 0 : (_error$message = error.message) === null || _error$message === void 0 ? void 0 : (_error$message$toLowe = _error$message.toLowerCase) === null || _error$message$toLowe === void 0 ? void 0 : (_error$message$toLowe2 = (_error$message$toLowe3 = _error$message$toLowe.call(_error$message)).includes) === null || _error$message$toLowe2 === void 0 ? void 0 : _error$message$toLowe2.call(_error$message$toLowe3, \"network\")) ? \"Network Error\" : (error === null || error === void 0 ? void 0 : (_error$message2 = error.message) === null || _error$message2 === void 0 ? void 0 : (_error$message2$toLow = _error$message2.toLowerCase) === null || _error$message2$toLow === void 0 ? void 0 : (_error$message2$toLow2 = (_error$message2$toLow3 = _error$message2$toLow.call(_error$message2)).includes) === null || _error$message2$toLow2 === void 0 ? void 0 : _error$message2$toLow2.call(_error$message2$toLow3, \"timeout\")) ? \"Service Timeout, Try Again.\" : \"Something went wrong!\";\n      setLoginErrorMessage(msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"animated fadeIn delay-05s\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset-form-container login-form-container mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"mx-auto\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo-holder\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  alt: \"logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Provide your old and new password to proceed.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: \"Password must be a minimum of 8 characters and contain at least 1 uppercase letter, 1 digit and 1 symbol.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `form-group${isInputFocused.oldPassword ? \" input-focused\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"oldPassword\",\n                children: \"Old Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: showOldPassword ? \"text\" : \"password\",\n                name: \"oldPassword\",\n                id: \"oldPassword\",\n                className: \"form-control\",\n                required: true,\n                onBlur: handleInputBlur,\n                onFocus: handleInputFocused,\n                onChange: handleChange,\n                value: userInputs.oldPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"show-password-btn1\",\n                onClick: () => {\n                  handleShowPassword(\"old\");\n                },\n                children: showOldPassword ? /*#__PURE__*/_jsxDEV(EyeSlashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(EyeFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mb-0 form-group${isInputFocused.newPassword ? \" input-focused\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newPassword\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: showNewPassword ? \"text\" : \"password\",\n                name: \"newPassword\",\n                id: \"newPassword\",\n                className: \"form-control\",\n                required: true,\n                onBlur: handleInputBlur,\n                onFocus: handleInputFocused,\n                onChange: handleChange,\n                value: userInputs.newPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"show-password-btn1\",\n                onClick: () => {\n                  handleShowPassword(\"new\");\n                },\n                children: showNewPassword ? /*#__PURE__*/_jsxDEV(EyeSlashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(EyeFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `form-group${isInputFocused.confirmPassword ? \" input-focused\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: showConfirmPassword ? \"text\" : \"password\",\n                name: \"confirmPassword\",\n                id: \"confirmPassword\",\n                className: \"form-control\",\n                required: true,\n                onBlur: handleInputBlur,\n                onFocus: handleInputFocused,\n                onChange: handleChange,\n                value: userInputs.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"show-password-btn1\",\n                onClick: () => {\n                  handleShowPassword(\"confirm\");\n                },\n                children: showConfirmPassword ? /*#__PURE__*/_jsxDEV(EyeSlashFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(EyeFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 8\n            }, this), loginErrorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom invalid-feedback mb-2\",\n              children: loginErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !userInputs.newPassword && !userInputs.confirmPassword && !userInputs.oldPassword || userInputs.newPassword && userInputs.newPassword.toString() !== userInputs.confirmPassword.toString(),\n              className: \"signin-btn btn\",\n              type: \"submit\",\n              style: {\n                padding: \"25px 103px 25px 108px\"\n              },\n              children: [\"Change Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `${isLoading ? \"loading\" : \"\"}`,\n                children: isLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                  className: \"rotating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 9\n                }, this) : /*#__PURE__*/_jsxDEV(ArrowRightCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overlay-div\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ResetPassword, \"TF6Qxu3PVbLZUPrW6HFhu27Zl+4=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/components/resetPassword.js"],"names":["React","useEffect","useState","logo","useHistory","notify","resetAdminPassword","ResetPassword","props","showNewPassword","setShowNewPassword","showOldPassword","setShowOldPassword","showConfirmPassword","setShowConfirmPassword","isInputFocused","setInputFocused","oldPassword","newPassword","confirmPassword","userInputs","setInputs","isLoading","setLoading","loginErrorMessage","setLoginErrorMessage","body","document","querySelector","classList","remove","style","paddingRight","modalBackdrop","handleShowPassword","target","prev","handleChange","e","name","value","handleInputFocused","handleInputBlur","handleSubmit","preventDefault","result","error","message","msg","toLowerCase","includes","toString","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from '../assets/img/logo-main.png';\nimport { ReactComponent as ArrowRightCircle} from '../assets/icons/arrow-right-circle.svg';\nimport { ReactComponent as EyeFill} from '../assets/icons/eye-fill.svg';\nimport { ReactComponent as EyeSlashFill} from '../assets/icons/eye-slash-fill.svg';\nimport { ReactComponent as SpinnerIcon} from '../assets/icons/spinner.svg';\nimport { useHistory } from 'react-router-dom';\nimport notify from '../utils/notification';\nimport { resetAdminPassword } from '../services/authService';\n\nconst ResetPassword = props => {\n\n    const [showNewPassword, setShowNewPassword] = useState(false);\n\tconst [showOldPassword, setShowOldPassword] = useState(false);\n\tconst [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n    const [isInputFocused, setInputFocused] = useState({\n\t\toldPassword: false,\n        newPassword: false,\n        confirmPassword: false\n    });\n\n    const [userInputs, setInputs] = useState({\n\t\toldPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n    });\n\n    const [isLoading, setLoading] = useState(false);\n    const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n        //remove modal reminants\n        const body = document.querySelector('body');\n        body.classList.remove(\"modal-open\");\n        body.style.paddingRight = \"\";\n\n        const modalBackdrop = document.querySelector(\".modal-backdrop\");\n        if(modalBackdrop) modalBackdrop.remove();\n    }, []);\n\t\n    const handleShowPassword = target => {\n\t\tif(target === \"new\") {\n\t\t\tsetShowNewPassword(prev => !prev)\n\t\t} else if(target === \"confirm\") {\n\t\t\tsetShowConfirmPassword(prev => !prev)\n\t\t} else {\n\t\t\tsetShowOldPassword(prev => !prev)\n\t\t}\n\t};\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setLoginErrorMessage(\"\");\n\n        setInputs(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n\tconst handleInputFocused = e => {\n\t\tconst { name } = e.target;\n\t\tsetInputFocused(prev => ({\n\t\t\t...prev,\n\t\t\t[name]: true\n\t\t}));\n\t};\n\n\tconst handleInputBlur = e => {\n\t\tconst { name } = e.target;\n\t\tsetInputFocused(prev => ({\n\t\t\t...prev,\n\t\t\t[name]: false\n\t\t}));\n\t};\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tsetLoading(true);\n\t\tsetLoginErrorMessage(\"\");\n\n\t\ttry {\n\t\t\tconst result = await resetAdminPassword(userInputs.oldPassword, userInputs.newPassword);\n\t\t\tsetLoading(false);\n\n\t\t\tif(result.error) return setLoginErrorMessage(result.message);\n\n\t\t\tnotify(result.message, \"success\", () => {\n\t\t\t\tsetInputs({\n\t\t\t\t\toldPassword: \"\",\n\t\t\t\t\tnewPassword: \"\",\n\t\t\t\t\tconfirmPassword: \"\"\n\t\t\t\t})\n\t\t\t});\n\n\t\t} catch (error) {\n\t\t\tsetLoading(false);\n\t\t\tconst msg = error?.toLowerCase?.().includes?.(\"unauth\") ? \"Unauthorized.\" :\n\t\t\terror?.message?.toLowerCase?.().includes?.(\"network\") ? \"Network Error\" :\n\t\t\t\terror?.message?.toLowerCase?.().includes?.(\"timeout\") ? \"Service Timeout, Try Again.\" :\n\t\t\t\t\"Something went wrong!\";\n\t\t\tsetLoginErrorMessage(msg);\n\t\t}\n\t};\n\t\n\treturn(\n\t\t<article className=\"animated fadeIn delay-05s\">\n\t\t\t<section className=\"mx-auto\">\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t{/* <div className=\"left-img-holder\">\n\t\t\t\t\t\t<img src={sideImg} alt=\"\" />\n\t\t\t\t\t</div> */}\n\n\t\t\t\t\t<div className=\"reset-form-container login-form-container mx-auto\">\n\t\t\t\t\t\t<form className=\"mx-auto\" onSubmit={handleSubmit}>\n\n\t\t\t\t\t\t\t<div className=\"form-header\">\n\t\t\t\t\t\t\t\t<div className=\"logo-holder\">\n\t\t\t\t\t\t\t\t\t<img src={logo} alt=\"logo\"/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<p>Provide your old and new password to proceed.</p>\n\t\t\t\t\t\t\t\t<p className=\"text-danger\">Password must be a minimum of 8 characters and contain at least 1 uppercase letter, 1 digit and 1 symbol.</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={`form-group${isInputFocused.oldPassword ? \" input-focused\" : \"\"}`}>\n\t\t\t\t\t\t\t\t<label htmlFor=\"oldPassword\">\n\t\t\t\t\t\t\t\t\tOld Password\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype={showOldPassword ? \"text\" : \"password\"}\n\t\t\t\t\t\t\t\t\tname=\"oldPassword\"\n\t\t\t\t\t\t\t\t\tid=\"oldPassword\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tonBlur={handleInputBlur}\n\t\t\t\t\t\t\t\t\tonFocus={handleInputFocused}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={userInputs.oldPassword}/>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"show-password-btn1\" onClick={() => {handleShowPassword(\"old\")}}>\n\t\t\t\t\t\t\t\t\t{showOldPassword ? <EyeSlashFill /> : <EyeFill />}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={`mb-0 form-group${isInputFocused.newPassword ? \" input-focused\" : \"\"}`}>\n\t\t\t\t\t\t\t\t<label htmlFor=\"newPassword\">\n\t\t\t\t\t\t\t\t\tNew Password\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype={showNewPassword ? \"text\" : \"password\"}\n\t\t\t\t\t\t\t\t\tname=\"newPassword\"\n\t\t\t\t\t\t\t\t\tid=\"newPassword\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tonBlur={handleInputBlur}\n\t\t\t\t\t\t\t\t\tonFocus={handleInputFocused}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={userInputs.newPassword}/>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"show-password-btn1\" onClick={() => {handleShowPassword(\"new\")}}>\n\t\t\t\t\t\t\t\t\t{showNewPassword ? <EyeSlashFill /> : <EyeFill />}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={`form-group${isInputFocused.confirmPassword ? \" input-focused\" : \"\"}`}>\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\">\n\t\t\t\t\t\t\t\t\tConfirm Password\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype={showConfirmPassword ? \"text\" : \"password\"}\n\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tonBlur={handleInputBlur}\n\t\t\t\t\t\t\t\t\tonFocus={handleInputFocused}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={userInputs.confirmPassword}/>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"show-password-btn1\" onClick={() => {handleShowPassword(\"confirm\")}}>\n\t\t\t\t\t\t\t\t\t{showConfirmPassword ? <EyeSlashFill /> : <EyeFill />}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{loginErrorMessage && <div className=\"custom invalid-feedback mb-2\">\n\t\t\t\t\t\t\t{loginErrorMessage}\n\t\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tdisabled={(!userInputs.newPassword && !userInputs.confirmPassword && !userInputs.oldPassword) || \n\t\t\t\t\t\t\t\t(userInputs.newPassword && userInputs.newPassword.toString() !== userInputs.confirmPassword.toString())} \n\t\t\t\t\t\t\t\tclassName=\"signin-btn btn\" type=\"submit\" style={{padding: \"25px 103px 25px 108px\"}}>\n\t\t\t\t\t\t\t\tChange Password\n\t\t\t\t\t\t\t<span className={`${isLoading ? \"loading\" : \"\"}`}>\n\t\t\t\t\t\t\t\t{isLoading ?\n\t\t\t\t\t\t\t\t<SpinnerIcon className=\"rotating\" /> :\n\t\t\t\t\t\t\t\t<ArrowRightCircle />}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<div className=\"overlay-div\"></div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</form>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</article>\n\t);\n};\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}