{"ast":null,"code":"import _objectSpread from\"/Users/xerde2/Downloads/npf-admin-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import axios from\"axios\";import{getAccessToken,getLoanAccessToken,clearAllTokens}from\"./localStorageService\";var _process$env=process.env,REACT_APP_API_BASE_URL=_process$env.REACT_APP_API_BASE_URL,REACT_APP_LOAN_API_BASE_URL=_process$env.REACT_APP_LOAN_API_BASE_URL;var createApiCients=function createApiCients(baseURL,getToken,clearToken){var newApiClient=axios.create({baseURL:baseURL,timeout:40000});newApiClient.interceptors.request.use(function(config){var token=getToken();var headerToken=config.headers.Authorization;//create new config object; setting header\nvar newConfig=_objectSpread(_objectSpread({},config),{},{headers:_objectSpread(_objectSpread({},config.headers),{},{Authorization:headerToken||token||\"\"}),validateStatus:function validateStatus(status){// console.log(status);\nreturn true;}});//return new config object\nreturn newConfig;},function(error){return Promise.reject(error);});newApiClient.interceptors.response.use(function(response){return response;},function(error){var _error$response,_error$response2,_error$response3;// if our server returns a 403 forbidden response\n/**\n       * error.response = {\n       *  \"data\":{},\n       * \"status\": 403,\n       * \"statusText\": \"Forbidden\",\n       * \"headers\": {},\n       * \"config\": {\n       *  \"url\": \"/api/users/cilozulu\",\n       *  \"method\": \"get\",\n       *  \"headers\": {\n       *      \"Accept\": \"\",\n       *      \"x-access-token\": \"\"\n       *   },\n       * \"baseURL\": \"\"\n       * }\n       * and someother parameters\n       */ // console.log(\"Interceptor error\", Object.entries(error));\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401||((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===400)clearToken();if((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data){var _error$response4;return Promise.reject((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data);}return Promise.reject(error);});return newApiClient;};var apiClient=createApiCients(REACT_APP_API_BASE_URL,function(){return\"Bearer \".concat(getAccessToken());},clearAllTokens);export var loanApiClient=createApiCients(REACT_APP_LOAN_API_BASE_URL,getLoanAccessToken,clearAllTokens);export var adminLoanApiClient=createApiCients(REACT_APP_LOAN_API_BASE_URL,getAccessToken,clearAllTokens);export default apiClient;","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/utils/apiClient.js"],"names":["axios","getAccessToken","getLoanAccessToken","clearAllTokens","process","env","REACT_APP_API_BASE_URL","REACT_APP_LOAN_API_BASE_URL","createApiCients","baseURL","getToken","clearToken","newApiClient","create","timeout","interceptors","request","use","config","token","headerToken","headers","Authorization","newConfig","validateStatus","status","error","Promise","reject","response","data","apiClient","loanApiClient","adminLoanApiClient"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,cADF,CAEEC,kBAFF,CAGEC,cAHF,KAIO,uBAJP,C,iBAMgEC,OAAO,CAACC,G,CAAhEC,sB,cAAAA,sB,CAAwBC,2B,cAAAA,2B,CAEhC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,OAAD,CAAUC,QAAV,CAAoBC,UAApB,CAAmC,CACzD,GAAMC,CAAAA,YAAY,CAAGZ,KAAK,CAACa,MAAN,CAAa,CAChCJ,OAAO,CAAPA,OADgC,CAEhCK,OAAO,CAAE,KAFuB,CAAb,CAArB,CAKAF,YAAY,CAACG,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CACE,SAACC,MAAD,CAAY,CACV,GAAMC,CAAAA,KAAK,CAAGT,QAAQ,EAAtB,CACA,GAAMU,CAAAA,WAAW,CAAGF,MAAM,CAACG,OAAP,CAAeC,aAAnC,CACA;AACA,GAAMC,CAAAA,SAAS,gCACVL,MADU,MAEbG,OAAO,gCACFH,MAAM,CAACG,OADL,MAELC,aAAa,CAAEF,WAAW,EAAID,KAAf,EAAwB,EAFlC,EAFM,CAMbK,cAAc,CAAE,wBAACC,MAAD,CAAY,CAC1B;AACA,MAAO,KAAP,CACD,CATY,EAAf,CAWA;AACA,MAAOF,CAAAA,SAAP,CACD,CAlBH,CAmBE,SAACG,KAAD,CAAW,CACT,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACD,CArBH,EAwBAd,YAAY,CAACG,YAAb,CAA0Bc,QAA1B,CAAmCZ,GAAnC,CACE,SAACY,QAAD,QAAcA,CAAAA,QAAd,EADF,CAEE,SAACH,KAAD,CAAW,uDACT;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAlBe,CAmBT;AACA,GAAI,kBAAAA,KAAK,CAACG,QAAN,0DAAgBJ,MAAhB,IAA2B,GAA3B,EAAkC,mBAAAC,KAAK,CAACG,QAAN,4DAAgBJ,MAAhB,IAA2B,GAAjE,CACEd,UAAU,GACZ,qBAAIe,KAAK,CAACG,QAAV,2CAAI,iBAAgBC,IAApB,CAA0B,sBACxB,MAAOH,CAAAA,OAAO,CAACC,MAAR,mBAAeF,KAAK,CAACG,QAArB,2CAAe,iBAAgBC,IAA/B,CAAP,CACD,CACD,MAAOH,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACD,CA5BH,EA8BA,MAAOd,CAAAA,YAAP,CACD,CA7DD,CA+DA,GAAMmB,CAAAA,SAAS,CAAGvB,eAAe,CAC/BF,sBAD+B,CAE/B,kCAAgBL,cAAc,EAA9B,GAF+B,CAG/BE,cAH+B,CAAjC,CAMA,MAAO,IAAM6B,CAAAA,aAAa,CAAGxB,eAAe,CAC1CD,2BAD0C,CAE1CL,kBAF0C,CAG1CC,cAH0C,CAArC,CAMP,MAAO,IAAM8B,CAAAA,kBAAkB,CAAGzB,eAAe,CAC/CD,2BAD+C,CAE/CN,cAF+C,CAG/CE,cAH+C,CAA1C,CAMP,cAAe4B,CAAAA,SAAf","sourcesContent":["import axios from \"axios\";\nimport {\n  getAccessToken,\n  getLoanAccessToken,\n  clearAllTokens,\n} from \"./localStorageService\";\n\nconst { REACT_APP_API_BASE_URL, REACT_APP_LOAN_API_BASE_URL } = process.env;\n\nconst createApiCients = (baseURL, getToken, clearToken) => {\n  const newApiClient = axios.create({\n    baseURL,\n    timeout: 40000,\n  });\n\n  newApiClient.interceptors.request.use(\n    (config) => {\n      const token = getToken();\n      const headerToken = config.headers.Authorization;\n      //create new config object; setting header\n      const newConfig = {\n        ...config,\n        headers: {\n          ...config.headers,\n          Authorization: headerToken || token || \"\",\n        },\n        validateStatus: (status) => {\n          // console.log(status);\n          return true;\n        },\n      };\n      //return new config object\n      return newConfig;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  newApiClient.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      // if our server returns a 403 forbidden response\n      /**\n       * error.response = {\n       *  \"data\":{},\n       * \"status\": 403,\n       * \"statusText\": \"Forbidden\",\n       * \"headers\": {},\n       * \"config\": {\n       *  \"url\": \"/api/users/cilozulu\",\n       *  \"method\": \"get\",\n       *  \"headers\": {\n       *      \"Accept\": \"\",\n       *      \"x-access-token\": \"\"\n       *   },\n       * \"baseURL\": \"\"\n       * }\n       * and someother parameters\n       */\n      // console.log(\"Interceptor error\", Object.entries(error));\n      if (error.response?.status === 401 || error.response?.status === 400)\n        clearToken();\n      if (error.response?.data) {\n        return Promise.reject(error.response?.data);\n      }\n      return Promise.reject(error);\n    }\n  );\n  return newApiClient;\n};\n\nconst apiClient = createApiCients(\n  REACT_APP_API_BASE_URL,\n  () => `Bearer ${getAccessToken()}`,\n  clearAllTokens\n);\n\nexport const loanApiClient = createApiCients(\n  REACT_APP_LOAN_API_BASE_URL,\n  getLoanAccessToken,\n  clearAllTokens\n);\n\nexport const adminLoanApiClient = createApiCients(\n  REACT_APP_LOAN_API_BASE_URL,\n  getAccessToken,\n  clearAllTokens\n);\n\nexport default apiClient;\n"]},"metadata":{},"sourceType":"module"}