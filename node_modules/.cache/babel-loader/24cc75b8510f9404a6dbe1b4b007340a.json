{"ast":null,"code":"import Axios from \"axios\";\nimport apiClient, { adminLoanApiClient, loanApiClient } from \"../utils/apiClient\";\nimport { getAccessToken, setLoanToken } from \"../utils/localStorageService\";\nexport const getPendingLoans = async () => {\n  try {\n    var _response$data, _response$data$data, _response$data$data$t, _response$data2, _response$data2$data, _response$data2$data$;\n\n    const response = await loanApiClient.get(\"pending-loanapplications\", {\n      headers: {\n        Authorization: getAccessToken()\n      }\n    });\n    if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$t = _response$data$data.token) === null || _response$data$data$t === void 0 ? void 0 : _response$data$data$t.data) setLoanToken(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : (_response$data2$data$ = _response$data2$data.token) === null || _response$data2$data$ === void 0 ? void 0 : _response$data2$data$.data);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getSingleLoanEntry = async loanApplicationId => {\n  try {\n    const response = await loanApiClient.get(`loanapplication/${loanApplicationId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getCustomerById = async id => {\n  try {\n    const response = await loanApiClient.get(`get-single-customer/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getRoles = async () => {\n  try {\n    const response = await loanApiClient.get(`roles`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getRoleById = async id => {\n  try {\n    const response = await loanApiClient.get(`role/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanProductCategory = async id => {\n  try {\n    const response = await loanApiClient.get(`loanproductcategory/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const updateLoanProductCategory = async id => {\n  try {\n    const response = await loanApiClient.put(`loanproductcategory/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanProductCategories = async () => {\n  try {\n    const response = await loanApiClient.get(`loanproductcategories`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanProductCategoriesByCategoryType = async categoryType => {\n  try {\n    const response = await loanApiClient.get(`loanproductcategories/${categoryType}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getBasicinfos = async () => {\n  try {\n    const response = await loanApiClient.get(`baseinfos`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getBasicinfoById = async id => {\n  try {\n    const response = await loanApiClient.get(`baseinfo/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const updateBasicinfoById = async id => {\n  try {\n    const response = await loanApiClient.put(`baseinfo/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const createLoanproduct = async data => {\n  try {\n    const {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id\n    } = data;\n    const response = await loanApiClient.post(`loanproduct`, {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const updateLoanproduct = async (data, id) => {\n  try {\n    const {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id\n    } = data;\n    const response = await loanApiClient.put(`loanproduct/${id}`, {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanproducts = async () => {\n  try {\n    const response = await loanApiClient.get(`loanproducts`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanproductById = async id => {\n  try {\n    const response = await loanApiClient.get(`loanproduct/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getCriteriaById = async id => {\n  try {\n    const response = await loanApiClient.get(`criteria/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getCriterias = async () => {\n  try {\n    const response = await loanApiClient.get(`criterias`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const updateCriteriaById = async id => {\n  try {\n    const response = await loanApiClient.put(`criteria/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const createBranch = async data => {\n  try {\n    const {\n      code,\n      name\n    } = data;\n    const response = await loanApiClient.post(`branch`, {\n      code,\n      name\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getBranchById = async id => {\n  try {\n    const response = await loanApiClient.get(`branch/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getBranches = async () => {\n  try {\n    const response = await loanApiClient.get(`branches`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const attachCriteriaToLoanproduct = async (data, productId) => {\n  const {\n    code,\n    scoreType,\n    requirements,\n    maxScore,\n    inputType\n  } = data;\n\n  try {\n    const response = await loanApiClient.post(`attach-criteria-to-loanproduct/${productId}`, {\n      code,\n      scoreType,\n      requirements,\n      maxScore,\n      inputType\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const loanRepaymentSchedule = async arrangementID => {\n  try {\n    const response = await apiClient.get(`/auth/repayment_schedule/${arrangementID}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanProducts = async companyCode => {\n  try {\n    const response = await apiClient.get(`/auth/loan_products/${companyCode}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanDetails = async loanAccount => {\n  try {\n    const response = await adminLoanApiClient.get(`loan-details/${loanAccount}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const approveOrRejectLoan = async (data, loanAppId) => {\n  try {\n    const {\n      status,\n      narrative,\n      isWithinLimit,\n      email,\n      firstname,\n      lastname,\n      productName,\n      approvedAmount,\n      approvedTenure,\n      work_flow_level,\n      applicationDate\n    } = data;\n    const response = await loanApiClient.put(`approve-reject-loan/${loanAppId}`, {\n      status,\n      narrative,\n      isWithinLimit,\n      email,\n      firstname,\n      lastname,\n      productName,\n      approvedAmount,\n      approvedTenure,\n      work_flow_level,\n      applicationDate\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const loanScoring = async loanAppId => {\n  try {\n    const response = await loanApiClient.post(`loanscore/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const adminLoanScoring = async loanAppId => {\n  try {\n    const response = await loanApiClient.post(`admin-loanscore/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const addAdminCriteria = async (loanAppId, data) => {\n  try {\n    const {\n      value,\n      requirement,\n      score_type\n    } = data;\n    const response = await loanApiClient.post(`admin-add-criteria/${loanAppId}`, {\n      value,\n      requirement,\n      score_type\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanScorecard = async loanAppId => {\n  try {\n    const response = await loanApiClient.get(`loan-scorecard/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanStatus = async loanAppId => {\n  try {\n    const response = await loanApiClient.get(`loan-status/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const disburseLoan = async (data, loanAppId) => {\n  try {\n    const {\n      email,\n      productName,\n      firstname,\n      lastname,\n      sn,\n      accountNo,\n      settlementAccount,\n      loanID,\n      customerName,\n      productCategory,\n      productType,\n      customerType,\n      sector,\n      dateGranted,\n      expiryDate,\n      tenorInDays,\n      legacyID,\n      authorizedLimit,\n      disbursedAmount,\n      arrangementFee,\n      outstandingBalance,\n      interestReceivable,\n      grossLoans,\n      riskRating,\n      pastDueObligationPrincipal,\n      numberOfPaymentsOutstanding,\n      daysPastDue,\n      pastDueObligationInterest,\n      subStatus,\n      status,\n      contratualIntRate,\n      annualEffectiveInterestRate,\n      restructure,\n      paymentFrequencyPrincipal,\n      paymentFreqInterest,\n      collateralStatus,\n      collateralType,\n      otherCollateral,\n      collateralvalue,\n      daysToRealization\n    } = data;\n    const response = await loanApiClient.post(`disburse-loan/${loanAppId}`, {\n      email,\n      productName,\n      firstname,\n      lastname,\n      sn,\n      accountNo,\n      settlementAccount,\n      loanID,\n      customerName,\n      productCategory,\n      productType,\n      customerType,\n      sector,\n      dateGranted,\n      expiryDate,\n      tenorInDays,\n      legacyID,\n      authorizedLimit,\n      disbursedAmount,\n      arrangementFee,\n      outstandingBalance,\n      interestReceivable,\n      grossLoans,\n      riskRating,\n      pastDueObligationPrincipal,\n      numberOfPaymentsOutstanding,\n      daysPastDue,\n      pastDueObligationInterest,\n      subStatus,\n      status,\n      contratualIntRate,\n      annualEffectiveInterestRate,\n      restructure,\n      paymentFrequencyPrincipal,\n      paymentFreqInterest,\n      collateralStatus,\n      collateralType,\n      otherCollateral,\n      collateralvalue,\n      daysToRealization\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getLoanScore = async loanAppId => {\n  try {\n    const response = await loanApiClient.get(`loanscore/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const adminGetLoanScore = async loanAppId => {\n  try {\n    const response = await loanApiClient.get(`admin-loanscore/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getFiles = async loanAppId => {\n  try {\n    const response = await loanApiClient.get(`get-files/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const loanRequestBooking = async payload => {\n  try {\n    const token = getAccessToken();\n    const config = {\n      headers: {\n        Authorization: token\n      },\n      validateStatus: status => {\n        // console.log(status);\n        return true;\n      }\n    };\n    const {\n      inputDate,\n      customerType,\n      customerId,\n      loanAction,\n      loanProduct,\n      // productId,\n      amountRequested,\n      currency,\n      interestRate,\n      termRequested,\n      loanPurpose,\n      sector,\n      guarantorId,\n      disburseAccount,\n      repayAccount,\n      chargeAccount\n    } = payload;\n    const response = await loanApiClient.post(`/loan-request-booking`, {\n      inputDate,\n      customerType,\n      customerId,\n      loanAction,\n      loanProduct,\n      // productId,\n      amountRequested,\n      currency,\n      interestRate,\n      termRequested,\n      loanPurpose,\n      sector,\n      guarantorId,\n      disburseAccount,\n      repayAccount,\n      chargeAccount\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const addComment = async payload => {\n  try {\n    const {\n      staffId,\n      rank,\n      fullName,\n      comment,\n      staffBranch,\n      staffEmail,\n      loanAppId\n    } = payload;\n    const response = await loanApiClient.post(\"/post-comment\", {\n      staffId,\n      rank,\n      fullName,\n      comment,\n      staffBranch,\n      staffEmail,\n      loanAppId\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const adminTotalScore = async loanAppId => {\n  try {\n    const response = await loanApiClient.post(`admin-totalscore/${loanAppId}`, \"\");\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getCommentByLoanId = async loanAppId => {\n  try {\n    const response = await loanApiClient.get(`get-comment/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const getCommentByLoanIdANdStaffId = async (loanAppId, staffId) => {\n  try {\n    const response = await loanApiClient.get(`get-comment/${loanAppId}/${staffId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/services/loanService.js"],"names":["Axios","apiClient","adminLoanApiClient","loanApiClient","getAccessToken","setLoanToken","getPendingLoans","response","get","headers","Authorization","data","token","error","Promise","reject","getSingleLoanEntry","loanApplicationId","getCustomerById","id","getRoles","getRoleById","getLoanProductCategory","updateLoanProductCategory","put","getLoanProductCategories","getLoanProductCategoriesByCategoryType","categoryType","getBasicinfos","getBasicinfoById","updateBasicinfoById","createLoanproduct","name","interestRate","maxTerm","maxTermUnit","limit","repaymentReqmt","guarantorsCnt","loanProductCategory_id","post","updateLoanproduct","getLoanproducts","getLoanproductById","getCriteriaById","getCriterias","updateCriteriaById","createBranch","code","getBranchById","getBranches","attachCriteriaToLoanproduct","productId","scoreType","requirements","maxScore","inputType","loanRepaymentSchedule","arrangementID","getLoanProducts","companyCode","getLoanDetails","loanAccount","approveOrRejectLoan","loanAppId","status","narrative","isWithinLimit","email","firstname","lastname","productName","approvedAmount","approvedTenure","work_flow_level","applicationDate","loanScoring","adminLoanScoring","addAdminCriteria","value","requirement","score_type","getLoanScorecard","getLoanStatus","disburseLoan","sn","accountNo","settlementAccount","loanID","customerName","productCategory","productType","customerType","sector","dateGranted","expiryDate","tenorInDays","legacyID","authorizedLimit","disbursedAmount","arrangementFee","outstandingBalance","interestReceivable","grossLoans","riskRating","pastDueObligationPrincipal","numberOfPaymentsOutstanding","daysPastDue","pastDueObligationInterest","subStatus","contratualIntRate","annualEffectiveInterestRate","restructure","paymentFrequencyPrincipal","paymentFreqInterest","collateralStatus","collateralType","otherCollateral","collateralvalue","daysToRealization","getLoanScore","adminGetLoanScore","getFiles","loanRequestBooking","payload","config","validateStatus","inputDate","customerId","loanAction","loanProduct","amountRequested","currency","termRequested","loanPurpose","guarantorId","disburseAccount","repayAccount","chargeAccount","addComment","staffId","rank","fullName","comment","staffBranch","staffEmail","adminTotalScore","getCommentByLoanId","getCommentByLoanIdANdStaffId"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport apiClient, {\n  adminLoanApiClient,\n  loanApiClient,\n} from \"../utils/apiClient\";\nimport { getAccessToken, setLoanToken } from \"../utils/localStorageService\";\n\nexport const getPendingLoans = async () => {\n  try {\n    const response = await loanApiClient.get(\"pending-loanapplications\", {\n      headers: {\n        Authorization: getAccessToken(),\n      },\n    });\n    if (response?.data?.data?.token?.data)\n      setLoanToken(response?.data?.data?.token?.data);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getSingleLoanEntry = async (loanApplicationId) => {\n  try {\n    const response = await loanApiClient.get(\n      `loanapplication/${loanApplicationId}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getCustomerById = async (id) => {\n  try {\n    const response = await loanApiClient.get(`get-single-customer/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getRoles = async () => {\n  try {\n    const response = await loanApiClient.get(`roles`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getRoleById = async (id) => {\n  try {\n    const response = await loanApiClient.get(`role/${id}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanProductCategory = async (id) => {\n  try {\n    const response = await loanApiClient.get(`loanproductcategory/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const updateLoanProductCategory = async (id) => {\n  try {\n    const response = await loanApiClient.put(`loanproductcategory/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanProductCategories = async () => {\n  try {\n    const response = await loanApiClient.get(`loanproductcategories`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanProductCategoriesByCategoryType = async (categoryType) => {\n  try {\n    const response = await loanApiClient.get(\n      `loanproductcategories/${categoryType}`\n    );\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getBasicinfos = async () => {\n  try {\n    const response = await loanApiClient.get(`baseinfos`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getBasicinfoById = async (id) => {\n  try {\n    const response = await loanApiClient.get(`baseinfo/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const updateBasicinfoById = async (id) => {\n  try {\n    const response = await loanApiClient.put(`baseinfo/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const createLoanproduct = async (data) => {\n  try {\n    const {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id,\n    } = data;\n    const response = await loanApiClient.post(`loanproduct`, {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id,\n    });\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const updateLoanproduct = async (data, id) => {\n  try {\n    const {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id,\n    } = data;\n\n    const response = await loanApiClient.put(`loanproduct/${id}`, {\n      name,\n      interestRate,\n      maxTerm,\n      maxTermUnit,\n      limit,\n      repaymentReqmt,\n      guarantorsCnt,\n      loanProductCategory_id,\n    });\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanproducts = async () => {\n  try {\n    const response = await loanApiClient.get(`loanproducts`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanproductById = async (id) => {\n  try {\n    const response = await loanApiClient.get(`loanproduct/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getCriteriaById = async (id) => {\n  try {\n    const response = await loanApiClient.get(`criteria/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getCriterias = async () => {\n  try {\n    const response = await loanApiClient.get(`criterias`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const updateCriteriaById = async (id) => {\n  try {\n    const response = await loanApiClient.put(`criteria/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const createBranch = async (data) => {\n  try {\n    const { code, name } = data;\n\n    const response = await loanApiClient.post(`branch`, { code, name });\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getBranchById = async (id) => {\n  try {\n    const response = await loanApiClient.get(`branch/${id}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getBranches = async () => {\n  try {\n    const response = await loanApiClient.get(`branches`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const attachCriteriaToLoanproduct = async (data, productId) => {\n  const { code, scoreType, requirements, maxScore, inputType } = data;\n  try {\n    const response = await loanApiClient.post(\n      `attach-criteria-to-loanproduct/${productId}`,\n      { code, scoreType, requirements, maxScore, inputType }\n    );\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const loanRepaymentSchedule = async (arrangementID) => {\n  try {\n    const response = await apiClient.get(\n      `/auth/repayment_schedule/${arrangementID}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanProducts = async (companyCode) => {\n  try {\n    const response = await apiClient.get(`/auth/loan_products/${companyCode}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanDetails = async (loanAccount) => {\n  try {\n    const response = await adminLoanApiClient.get(\n      `loan-details/${loanAccount}`\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const approveOrRejectLoan = async (data, loanAppId) => {\n  try {\n    const {\n      status,\n      narrative,\n      isWithinLimit,\n      email,\n      firstname,\n      lastname,\n      productName,\n      approvedAmount,\n      approvedTenure,\n      work_flow_level,\n      applicationDate,\n    } = data;\n    const response = await loanApiClient.put(\n      `approve-reject-loan/${loanAppId}`,\n      {\n        status,\n        narrative,\n        isWithinLimit,\n        email,\n        firstname,\n        lastname,\n        productName,\n        approvedAmount,\n        approvedTenure,\n        work_flow_level,\n        applicationDate,\n      }\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const loanScoring = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.post(`loanscore/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const adminLoanScoring = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.post(`admin-loanscore/${loanAppId}`);\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const addAdminCriteria = async (loanAppId, data) => {\n  try {\n    const { value, requirement, score_type } = data;\n\n    const response = await loanApiClient.post(\n      `admin-add-criteria/${loanAppId}`,\n      { value, requirement, score_type }\n    );\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanScorecard = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.get(`loan-scorecard/${loanAppId}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanStatus = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.get(`loan-status/${loanAppId}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const disburseLoan = async (data, loanAppId) => {\n  try {\n    const {\n      email,\n      productName,\n      firstname,\n      lastname,\n      sn,\n      accountNo,\n      settlementAccount,\n      loanID,\n      customerName,\n      productCategory,\n      productType,\n      customerType,\n      sector,\n      dateGranted,\n      expiryDate,\n      tenorInDays,\n      legacyID,\n      authorizedLimit,\n      disbursedAmount,\n      arrangementFee,\n      outstandingBalance,\n      interestReceivable,\n      grossLoans,\n      riskRating,\n      pastDueObligationPrincipal,\n      numberOfPaymentsOutstanding,\n      daysPastDue,\n      pastDueObligationInterest,\n      subStatus,\n      status,\n      contratualIntRate,\n      annualEffectiveInterestRate,\n      restructure,\n      paymentFrequencyPrincipal,\n      paymentFreqInterest,\n      collateralStatus,\n      collateralType,\n      otherCollateral,\n      collateralvalue,\n      daysToRealization,\n    } = data;\n\n    const response = await loanApiClient.post(`disburse-loan/${loanAppId}`, {\n      email,\n      productName,\n      firstname,\n      lastname,\n      sn,\n      accountNo,\n      settlementAccount,\n      loanID,\n      customerName,\n      productCategory,\n      productType,\n      customerType,\n      sector,\n      dateGranted,\n      expiryDate,\n      tenorInDays,\n      legacyID,\n      authorizedLimit,\n      disbursedAmount,\n      arrangementFee,\n      outstandingBalance,\n      interestReceivable,\n      grossLoans,\n      riskRating,\n      pastDueObligationPrincipal,\n      numberOfPaymentsOutstanding,\n      daysPastDue,\n      pastDueObligationInterest,\n      subStatus,\n      status,\n      contratualIntRate,\n      annualEffectiveInterestRate,\n      restructure,\n      paymentFrequencyPrincipal,\n      paymentFreqInterest,\n      collateralStatus,\n      collateralType,\n      otherCollateral,\n      collateralvalue,\n      daysToRealization,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getLoanScore = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.get(`loanscore/${loanAppId}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const adminGetLoanScore = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.get(`admin-loanscore/${loanAppId}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getFiles = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.get(`get-files/${loanAppId}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const loanRequestBooking = async (payload) => {\n  try {\n    const token = getAccessToken();\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n      validateStatus: (status) => {\n        // console.log(status);\n        return true;\n      },\n    };\n    const {\n      inputDate,\n      customerType,\n      customerId,\n      loanAction,\n      loanProduct,\n      // productId,\n      amountRequested,\n      currency,\n      interestRate,\n      termRequested,\n      loanPurpose,\n      sector,\n      guarantorId,\n      disburseAccount,\n      repayAccount,\n      chargeAccount,\n    } = payload;\n    const response = await loanApiClient.post(`/loan-request-booking`, {\n      inputDate,\n      customerType,\n      customerId,\n      loanAction,\n      loanProduct,\n      // productId,\n      amountRequested,\n      currency,\n      interestRate,\n      termRequested,\n      loanPurpose,\n      sector,\n      guarantorId,\n      disburseAccount,\n      repayAccount,\n      chargeAccount,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const addComment = async (payload) => {\n  try {\n    const {\n      staffId,\n      rank,\n      fullName,\n      comment,\n      staffBranch,\n      staffEmail,\n      loanAppId,\n    } = payload;\n\n    const response = await loanApiClient.post(\"/post-comment\", {\n      staffId,\n      rank,\n      fullName,\n      comment,\n      staffBranch,\n      staffEmail,\n      loanAppId,\n    });\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const adminTotalScore = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.post(\n      `admin-totalscore/${loanAppId}`,\n      \"\"\n    );\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getCommentByLoanId = async (loanAppId) => {\n  try {\n    const response = await loanApiClient.get(`get-comment/${loanAppId}`);\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const getCommentByLoanIdANdStaffId = async (loanAppId, staffId) => {\n  try {\n    const response = await loanApiClient.get(\n      `get-comment/${loanAppId}/${staffId}`\n    );\n\n    return response.data;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}