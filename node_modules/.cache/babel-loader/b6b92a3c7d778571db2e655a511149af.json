{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xerde2/Downloads/npf-admin-web/src/components/customers.js\",\n    _s = $RefreshSig$();\n\n// Checkboxes beside customers are commented out to until feature to export data of selected customers is needed\n// -----------------------------------------------\nimport React, { Fragment, useState, useEffect, useRef, useCallback } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport face from \"../assets/img/placeholder-img.png\";\nimport placeholderImg from \"../assets/img/placeholder-img.png\";\nimport { ReactComponent as TimesIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/times.svg\";\nimport { ReactComponent as CheckCircleFill } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/check-circle-fill.svg\";\nimport { ReactComponent as SearchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/search.svg\";\nimport { ReactComponent as ExportIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/export.svg\";\nimport { ReactComponent as Funnel } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/funnel.svg\";\nimport { ReactComponent as ArrowLeftShortCircleFill } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/arrow-left-short-circle-fill.svg\";\nimport { ReactComponent as SpinnerIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/spinner.svg\";\nimport { ReactComponent as NothingFoundIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/icons/nothing-found.svg\";\nimport Customer from \"./customer\";\nimport { getCustomers, getExportCustomersData, searchCustomers } from \"../services/customerService\";\nimport errorHandler, { validateToken } from \"../utils/errorHandler\";\nimport notify from \"../utils/notification\";\nimport { handleHideModal, handleOpenModal, useAuth } from \"./utilities\";\nimport ReactPaginate from \"react-paginate\";\nimport Modal from \"./modal\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getAccessToken, getAdminName } from \"../utils/localStorageService\";\n\nconst Customers = props => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const history = useHistory();\n  const auth = useAuth();\n  const adminName = getAdminName(); // useCallback ensures that handle error function isn't recreated on every render\n\n  const handleError = useCallback((errorObject, notify, cb) => errorHandler(auth)(errorObject, notify, cb), [auth]);\n  const [customers, setCustomers] = useState(() => Array(0).fill(\"\").map((v, idx) => ({\n    id: `40${idx}`,\n    bvnhash: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    middlename: null,\n    phone: \"\",\n    simswapstatus: null,\n    otpstatus: null,\n    email: \"\",\n    dob: \"1999-06-30T00:00:00.000Z\",\n    pob: null,\n    bucket: \"npf-mfb\",\n    photo_location: \"\",\n    photo_key: \"40/photo/livelinesscheck.png\",\n    photo_number: null,\n    video_location: \"\",\n    video_key: \"\",\n    signature_location: \"\",\n    signature_key: \"\",\n    document_location: \"\",\n    document_key: \"\",\n    document_number: \"\",\n    document_type_id: 2,\n    documentschecked: null,\n    isnewbankcustomer: null,\n    document_issue_date: \"\",\n    document_expiry_date: \"\",\n    isotpverified: true,\n    livelinesschecked: null,\n    salary_officer: false,\n    force_number: \"N/A\",\n    ippis_number: \"N/A\",\n    address: \"N/A\",\n    has_pin: true,\n    transfer_limit: \"\",\n    createdAt: \"2020-11-04T15:11:59.904Z\",\n    updatedAt: \"2020-11-06T09:11:40.700Z\",\n    user: 62,\n    accountNumber: \"0209525729\",\n    bvn: \"\",\n    accountStatus: idx === 0 || idx === 2 ? false : true,\n    liveliness: idx === 0 || idx === 2 ? false : true,\n    PND: v.accountStatus === 1 ? true : false,\n    signup_incomplete: false\n  })));\n  const [displayedCustomers, setDisplayedCustomers] = useState([]);\n  const [values, setValues] = useState({\n    search: \"\",\n    start_date: \"\",\n    end_date: \"\"\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showCustomers, setShowCustomers] = useState(\"all\");\n  const [isLoading, setLoading] = useState(false);\n  const [filter, setFilter] = useState({\n    method: \"\",\n    param: \"\"\n  });\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [isDataExporting, setDataExporting] = useState(false);\n  const isSearching = useRef(false);\n  const token = getAccessToken();\n  useEffect(() => {\n    validateToken(token, history, jwt_decode, auth, notify);\n  }, [auth, history, token]); // useCallback ensures that handle error function isn't recreated on every render\n\n  const fetchCustomers = useCallback(async (method, param) => {\n    setLoading(true);\n    const data = [method === \"channel\" ? param : \"\", method === \"reg_complete\" ? param : \"\"];\n\n    try {\n      const result = await getCustomers(...data);\n      setLoading(false);\n      if (result.error) return notify(result.message, \"error\"); // channel ? setDisplayedCustomers([...result.result]) :\n\n      setCustomers(prev => [...(result === null || result === void 0 ? void 0 : result.result)]);\n    } catch (error) {\n      handleError(error, notify, () => setLoading(false));\n    }\n  }, [handleError]);\n  useEffect(() => {\n    fetchCustomers();\n  }, [fetchCustomers]);\n  useEffect(() => {\n    setDisplayedCustomers(customers);\n  }, [customers]);\n  useEffect(() => {\n    let tempCustomers;\n    setCurrentPage(1);\n    if (showCustomers === \"all\") tempCustomers = customers; // for now enabled refers to PND inactive while restricted refers to active PND\n    // if(showCustomers === \"active\" || showCustomers === \"restricted\"){\n    //   tempCustomers = customers.filter(({enabled}) => (showCustomers === \"active\" && enabled) || (showCustomers === \"restricted\" && !enabled));\n    // };\n\n    if (showCustomers === \"active\" || showCustomers === \"restricted\") {\n      tempCustomers = customers.filter(_ref => {\n        let {\n          PND\n        } = _ref;\n        return showCustomers === \"active\" && !PND || showCustomers === \"restricted\" && PND;\n      });\n    } // if(showCustomers === \"active\"){\n    //   tempCustomers = customers.filter(({enabled}) => {\n    //     if (showCustomers === \"active\" && enabled) return true;\n    //     // if (showCustomers === \"pending\" && !accountStatus) return true;\n    //     return false;\n    //   });\n    // };\n\n\n    if (showCustomers === \"pending\") {\n      tempCustomers = customers.filter(_ref2 => {\n        let {\n          isnewbankcustomer,\n          livelinesschecked,\n          documentschecked\n        } = _ref2;\n        if (showCustomers === \"pending\" && (isnewbankcustomer === null || livelinesschecked === \"PENDING\" || documentschecked === null)) return true;\n        return false;\n      });\n    }\n\n    setDisplayedCustomers(tempCustomers);\n  }, [showCustomers, customers]);\n\n  const handleNavigateToCustomer = e => {\n    const element = e.target;\n    if (!element.classList.contains(\"action-btn\")) return;\n    const userId = element.dataset.userId; // const requestedCustomer = customers[customers.findIndex(v => v.id.toString() === userId)];\n    // history.push(`${path}/${userId}`, {requestedCustomer: requestedCustomer});\n\n    history.push(`${path}/${userId}`);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n\n    if (name.includes(\"selCustomer\")) {\n      let id = name.replace(\"selCustomer-\", \"\");\n      id = id === \"all\" ? id : parseInt(id);\n      let newSelectedCustomers;\n\n      if (checked) {\n        newSelectedCustomers = id === \"all\" ? [\"all\"] : [...selectedCustomers, id];\n      } else {\n        newSelectedCustomers = selectedCustomers.includes(\"all\") && id !== \"all\" ? [...displayedCustomers.map(_ref3 => {\n          let {\n            id\n          } = _ref3;\n          return id;\n        })] : [...selectedCustomers];\n        const idx = newSelectedCustomers.findIndex(v => v === id);\n        newSelectedCustomers.splice(idx, 1);\n      }\n\n      setSelectedCustomers(newSelectedCustomers);\n      return;\n    }\n\n    setValues(prev => ({ ...prev,\n      [name]: name === \"search\" ? value.trim() : value\n    }));\n    if (name === \"search\") handleSearchCustomers(value);\n  };\n\n  const handleSearchCustomers = async searchPhrase => {\n    setShowCustomers(\"all\");\n    setCurrentPage(1); // setFilter(\"\");\n\n    if (!searchPhrase) {\n      isSearching.current = false;\n      setLoading(false);\n      setDisplayedCustomers(customers);\n      return;\n    }\n\n    isSearching.current = true;\n    setLoading(true);\n\n    try {\n      const result = await searchCustomers(searchPhrase);\n      setLoading(false);\n      if (result.error) return notify(result.message, \"error\");\n      isSearching.current && setDisplayedCustomers(result.result);\n      isSearching.current = false;\n    } catch (error) {\n      handleError(error, notify, () => setLoading(false));\n    }\n  };\n\n  const handleFilterCustomers = (method, param) => {\n    setFilter({\n      method,\n      param\n    });\n    fetchCustomers(method, param);\n    setCurrentPage(1);\n    setShowCustomers(\"all\");\n    setValues(prev => ({ ...prev,\n      search: \"\"\n    }));\n  };\n\n  const handleExportData = async () => {\n    setDataExporting(true);\n    handleHideModal(\"#exportCustomersDataModal\");\n\n    try {\n      const customer_ids = selectedCustomers.includes(\"all\") ? [] : selectedCustomers;\n      const start_date = values.start_date ? values.start_date.toISOString() : \"\";\n      const end_date = values.end_date ? values.end_date.toISOString() : \"\";\n      const requestTime = moment().format(\"DD-MM-YY\"); // fetch result\n\n      const result = await getExportCustomersData({\n        customer_ids,\n        start_date,\n        end_date\n      });\n      setDataExporting(false); // handle download\n\n      const url = window.URL.createObjectURL(result);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `Customers ${requestTime}.xlsx`); //or any other extension\n\n      document.body.appendChild(link);\n      link.click();\n      setTimeout(() => {\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        setValues(prev => ({ ...prev,\n          start_date: null,\n          end_date: null\n        }));\n      }, 500);\n    } catch (error) {\n      handleError(error, notify, () => setDataExporting(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: path,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Customer Accounts Management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: showCustomers === \"all\" ? \"active\" : \"\",\n                onClick: e => setShowCustomers(\"all\"),\n                children: \"All Customers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: showCustomers === \"active\" ? \"active\" : \"\",\n                onClick: e => setShowCustomers(\"active\"),\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: showCustomers === \"pending\" ? \"active\" : \"\",\n                onClick: e => setShowCustomers(\"pending\"),\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                className: showCustomers === \"restricted\" ? \"active\" : \"\",\n                onClick: e => setShowCustomers(\"restricted\"),\n                children: \"Restricted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small-admin-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: face,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), adminName || `NPF Admin`, /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"arrow down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"some-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-div\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"search\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"search\",\n                  className: \"form-control\",\n                  name: \"search\",\n                  id: \"search\",\n                  \"aria-label\": \"Search for customers\",\n                  value: values.search,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => handleOpenModal(\"#exportCustomersDataModal\"),\n                id: \"exportCustomersData\",\n                className: `btn export-data-btn d-block ${isDataExporting ? \"loading disabled\" : \"\"}`,\n                children: isDataExporting ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                  className: \"rotating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(ExportIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this), \" Export Data\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn filter-btn dropdown-toggle\",\n                type: \"button\",\n                id: \"dropdownMenuButton\",\n                \"data-toggle\": \"dropdown\",\n                \"aria-haspopup\": \"true\",\n                \"aria-expanded\": \"false\",\n                children: filter.param === \"bvn\" ? \"BVN\" : filter.param === \"phone\" ? \"Phone\" : filter.param === \"bank\" ? \"Bank\" : filter.param === \"true\" ? \"Completed\" : filter.param === \"false\" ? \"InComplete\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Funnel, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 23\n                  }, this), \" Filter\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-menu\",\n                \"aria-labelledby\": \"dropdownMenuButton\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"dropdown-header\",\n                  children: \"Filter Customers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-divider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"dropdown-header\",\n                  children: \"By Registration Mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `dropdown-item ${filter.param === \"bvn\" ? \"active\" : \"\"}`,\n                  onClick: e => handleFilterCustomers(\"channel\", \"bvn\"),\n                  children: \"BVN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `dropdown-item ${filter.param === \"phone\" ? \"active\" : \"\"}`,\n                  onClick: e => handleFilterCustomers(\"channel\", \"phone\"),\n                  children: \"Phone number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `dropdown-item ${filter.param === \"bank\" ? \"active\" : \"\"}`,\n                  onClick: e => handleFilterCustomers(\"channel\", \"bank\"),\n                  children: \"Bank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dropdown-divider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"dropdown-header\",\n                  children: \"By Registration Completion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `dropdown-item ${filter.param === \"true\" ? \"active\" : \"\"}`,\n                  onClick: e => handleFilterCustomers(\"reg_complete\", \"true\"),\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `dropdown-item ${filter.param === \"false\" ? \"active\" : \"\"}`,\n                  onClick: e => handleFilterCustomers(\"reg_complete\", \"false\"),\n                  children: \"Incomplete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 19\n                }, this), filter.param && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown-divider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `dropdown-item`,\n                    onClick: e => handleFilterCustomers(\"\", \"\"),\n                    children: \"Clear\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"customers-page\",\n          children: [(isLoading || displayedCustomers.length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searching-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"svg-holder \" + (!isLoading ? \"not-loading\" : \"\"),\n              children: isLoading ? /*#__PURE__*/_jsxDEV(SpinnerIcon, {\n                className: \"rotating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(NothingFoundIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"NOTHING FOUND!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), !isLoading && displayedCustomers.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"color-dark-text-blue\",\n              children: [\"Customers per page:\", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                style: {\n                  display: \"inline-block\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  onChange: e => {\n                    setItemsPerPage(e.target.value);\n                    setCurrentPage(1);\n                  },\n                  value: itemsPerPage,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 5,\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 10,\n                    children: \"10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 20,\n                    children: \"20\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 50,\n                    children: \"50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 100,\n                    children: \"100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 150,\n                    children: \"150\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 200,\n                    children: \"200\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-borderless table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"color-dark-text-blue\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Customer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"BVN\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Phone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"PND Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Facial Liveliness Check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Registration Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                onClick: handleNavigateToCustomer,\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"spacer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 21\n                }, this), displayedCustomers.map((v, idx) => {\n                  const initialBoundary = (currentPage - 1) * itemsPerPage + 1;\n                  const finalBoundary = currentPage * itemsPerPage;\n                  const itemNumber = idx + 1;\n                  if (itemNumber < initialBoundary || itemNumber > finalBoundary) return null;\n                  const pseudoAccStatus = !v.PND;\n                  const showIncompleteBadge = v.signup_incomplete && (filter.method !== \"reg_complete\" || filter.param !== \"false\");\n                  return /*#__PURE__*/_jsxDEV(Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"customer-card\",\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"major-details\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"customer-img\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: v.photo_location || placeholderImg,\n                              className: \"\",\n                              alt: \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 571,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 570,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"name font-weight-bold\",\n                              children: [v.firstname, \" \", v.lastname, showIncompleteBadge && \" (Incomplete)\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 578,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"email font-weight-light\",\n                              children: v.email\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 582,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 577,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 569,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 568,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"bvn font-weight-light\",\n                        children: v.bvnhash || \"N/A\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"phone font-weight-light\",\n                        children: [\"(234) \", v.phone.replace(\"234\", \"0\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `account-status ${pseudoAccStatus ? \"active\" : \"pending\"}`,\n                          children: pseudoAccStatus ? \"INACTIVE\" : \"ACTIVE\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 596,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `liveliness ${v.video_location ? \"provided\" : \"\"}`,\n                          children: [v.video_location ? /*#__PURE__*/_jsxDEV(CheckCircleFill, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 615,\n                            columnNumber: 35\n                          }, this) : /*#__PURE__*/_jsxDEV(TimesIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 617,\n                            columnNumber: 35\n                          }, this), v.video_location ? \" P\" : \"Not p\", \"rovided\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 609,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 604,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: moment(v.createdAt).format(\"Do MMMM YYYY\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 622,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          \"data-user-id\": v.id,\n                          className: \"btn btn-success action-btn\",\n                          children: \"View\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 626,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 625,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 27\n                    }, this), idx !== displayedCustomers.length - 1 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"spacer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 29\n                    }, this)]\n                  }, `${v.user} + ${idx}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audit-history-footer\",\n              children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                pageCount: Math.ceil(displayedCustomers.length / itemsPerPage) || 1,\n                marginPagesDisplayed: 2,\n                pageRangeDisplayed: 3,\n                forcePage: currentPage - 1,\n                onPageChange: selectedItem => setCurrentPage(selectedItem.selected + 1),\n                containerClassName: \"pagination-btns\",\n                activeLinkClassName: \"active\",\n                pageLinkClassName: \"btn\",\n                previousLabel: /*#__PURE__*/_jsxDEV(ArrowLeftShortCircleFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 36\n                }, this),\n                previousLinkClassName: \"btn icon\",\n                nextLabel: /*#__PURE__*/_jsxDEV(ArrowLeftShortCircleFill, {\n                  style: {\n                    transform: \"rotateY(180deg)\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 23\n                }, this),\n                nextLinkClassName: \"btn icon\",\n                disabledClassName: \"disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          id: \"exportCustomersDataModal\",\n          showCloseX: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title color-dark-text-blue\",\n              id: `exportCustomersDataModalLabel`,\n              children: \"Export Customers Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"color-dark-text-blue\",\n                children: \"Select date range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-range-container row my-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    selected: values.start_date,\n                    value: values.start_date,\n                    onChange: date => setValues(prev => ({ ...prev,\n                      start_date: date\n                    })),\n                    name: \"start_date\",\n                    dateFormat: \"dd/MM/yyyy\",\n                    placeholderText: \"Start Date\",\n                    className: \"start_date form-control\",\n                    peekNextMonth: true,\n                    showMonthDropdown: true,\n                    showYearDropdown: true,\n                    dropdownMode: \"select\",\n                    locale: \"en-GB\",\n                    isClearable: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    selected: values.end_date,\n                    value: values.end_date,\n                    onChange: date => setValues(prev => ({ ...prev,\n                      end_date: date\n                    })),\n                    name: \"end_date\",\n                    dateFormat: \"dd/MM/yyyy\",\n                    placeholderText: \"End date\",\n                    className: \"end_date form-control\",\n                    minDate: values.start_date,\n                    peekNextMonth: true,\n                    showMonthDropdown: true,\n                    showYearDropdown: true,\n                    dropdownMode: \"select\",\n                    locale: \"en-GB\",\n                    isClearable: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-primary\",\n                  onClick: handleExportData,\n                  disabled: !values.start_date || !values.end_date || values.start_date && values.end_date && moment(values.start_date).isAfter(values.end_date),\n                  children: \"Continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-danger d-block\",\n                  children: values.start_date && values.end_date && moment(values.start_date).isAfter(values.end_date) && \"Please select an end date that comes after the start date.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${path}/:userId`,\n      component: Customer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Customers, \"f7h7O4Yz7oOWeeFUTvxV+8d6kLc=\", false, function () {\n  return [useRouteMatch, useHistory, useAuth];\n});\n\n_c = Customers;\nexport default Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["/Users/xerde2/Downloads/npf-admin-web/src/components/customers.js"],"names":["React","Fragment","useState","useEffect","useRef","useCallback","jwt_decode","Route","Switch","useHistory","useRouteMatch","moment","face","placeholderImg","Customer","getCustomers","getExportCustomersData","searchCustomers","errorHandler","validateToken","notify","handleHideModal","handleOpenModal","useAuth","ReactPaginate","Modal","DatePicker","getAccessToken","getAdminName","Customers","props","path","history","auth","adminName","handleError","errorObject","cb","customers","setCustomers","Array","fill","map","v","idx","id","bvnhash","firstname","lastname","middlename","phone","simswapstatus","otpstatus","email","dob","pob","bucket","photo_location","photo_key","photo_number","video_location","video_key","signature_location","signature_key","document_location","document_key","document_number","document_type_id","documentschecked","isnewbankcustomer","document_issue_date","document_expiry_date","isotpverified","livelinesschecked","salary_officer","force_number","ippis_number","address","has_pin","transfer_limit","createdAt","updatedAt","user","accountNumber","bvn","accountStatus","liveliness","PND","signup_incomplete","displayedCustomers","setDisplayedCustomers","values","setValues","search","start_date","end_date","currentPage","setCurrentPage","showCustomers","setShowCustomers","isLoading","setLoading","filter","setFilter","method","param","itemsPerPage","setItemsPerPage","selectedCustomers","setSelectedCustomers","isDataExporting","setDataExporting","isSearching","token","fetchCustomers","data","result","error","message","prev","tempCustomers","handleNavigateToCustomer","e","element","target","classList","contains","userId","dataset","push","handleChange","name","value","checked","includes","replace","parseInt","newSelectedCustomers","findIndex","splice","trim","handleSearchCustomers","searchPhrase","current","handleFilterCustomers","handleExportData","customer_ids","toISOString","requestTime","format","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","length","display","initialBoundary","finalBoundary","itemNumber","pseudoAccStatus","showIncompleteBadge","Math","ceil","selectedItem","selected","transform","date","isAfter"],"mappings":"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","sourcesContent":["// Checkboxes beside customers are commented out to until feature to export data of selected customers is needed\n// -----------------------------------------------\nimport React, {\n  Fragment,\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport face from \"../assets/img/placeholder-img.png\";\nimport placeholderImg from \"../assets/img/placeholder-img.png\";\nimport { ReactComponent as TimesIcon } from \"../assets/icons/times.svg\";\nimport { ReactComponent as CheckCircleFill } from \"../assets/icons/check-circle-fill.svg\";\nimport { ReactComponent as SearchIcon } from \"../assets/icons/search.svg\";\nimport { ReactComponent as ExportIcon } from \"../assets/icons/export.svg\";\nimport { ReactComponent as Funnel } from \"../assets/icons/funnel.svg\";\nimport { ReactComponent as ArrowLeftShortCircleFill } from \"../assets/icons/arrow-left-short-circle-fill.svg\";\nimport { ReactComponent as SpinnerIcon } from \"../assets/icons/spinner.svg\";\nimport { ReactComponent as NothingFoundIcon } from \"../assets/icons/nothing-found.svg\";\nimport Customer from \"./customer\";\nimport {\n  getCustomers,\n  getExportCustomersData,\n  searchCustomers,\n} from \"../services/customerService\";\nimport errorHandler, { validateToken } from \"../utils/errorHandler\";\nimport notify from \"../utils/notification\";\nimport { handleHideModal, handleOpenModal, useAuth } from \"./utilities\";\nimport ReactPaginate from \"react-paginate\";\nimport Modal from \"./modal\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getAccessToken, getAdminName } from \"../utils/localStorageService\";\n\nconst Customers = (props) => {\n  const { path } = useRouteMatch();\n  const history = useHistory();\n  const auth = useAuth();\n  const adminName = getAdminName();\n  // useCallback ensures that handle error function isn't recreated on every render\n  const handleError = useCallback(\n    (errorObject, notify, cb) => errorHandler(auth)(errorObject, notify, cb),\n    [auth]\n  );\n\n  const [customers, setCustomers] = useState(() =>\n    Array(0)\n      .fill(\"\")\n      .map((v, idx) => ({\n        id: `40${idx}`,\n        bvnhash: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        middlename: null,\n        phone: \"\",\n        simswapstatus: null,\n        otpstatus: null,\n        email: \"\",\n        dob: \"1999-06-30T00:00:00.000Z\",\n        pob: null,\n        bucket: \"npf-mfb\",\n        photo_location: \"\",\n        photo_key: \"40/photo/livelinesscheck.png\",\n        photo_number: null,\n        video_location: \"\",\n        video_key: \"\",\n        signature_location: \"\",\n        signature_key: \"\",\n        document_location: \"\",\n        document_key: \"\",\n        document_number: \"\",\n        document_type_id: 2,\n        documentschecked: null,\n        isnewbankcustomer: null,\n        document_issue_date: \"\",\n        document_expiry_date: \"\",\n        isotpverified: true,\n        livelinesschecked: null,\n        salary_officer: false,\n        force_number: \"N/A\",\n        ippis_number: \"N/A\",\n        address: \"N/A\",\n        has_pin: true,\n        transfer_limit: \"\",\n        createdAt: \"2020-11-04T15:11:59.904Z\",\n        updatedAt: \"2020-11-06T09:11:40.700Z\",\n        user: 62,\n        accountNumber: \"0209525729\",\n        bvn: \"\",\n        accountStatus: idx === 0 || idx === 2 ? false : true,\n        liveliness: idx === 0 || idx === 2 ? false : true,\n        PND: v.accountStatus === 1 ? true : false,\n        signup_incomplete: false,\n      }))\n  );\n\n  const [displayedCustomers, setDisplayedCustomers] = useState([]);\n  const [values, setValues] = useState({\n    search: \"\",\n    start_date: \"\",\n    end_date: \"\",\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showCustomers, setShowCustomers] = useState(\"all\");\n  const [isLoading, setLoading] = useState(false);\n  const [filter, setFilter] = useState({\n    method: \"\",\n    param: \"\",\n  });\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [isDataExporting, setDataExporting] = useState(false);\n  const isSearching = useRef(false);\n  const token = getAccessToken();\n\n  useEffect(() => {\n    validateToken(token, history, jwt_decode, auth, notify);\n  }, [auth, history, token]);\n\n  // useCallback ensures that handle error function isn't recreated on every render\n  const fetchCustomers = useCallback(\n    async (method, param) => {\n      setLoading(true);\n      const data = [\n        method === \"channel\" ? param : \"\",\n        method === \"reg_complete\" ? param : \"\",\n      ];\n      try {\n        const result = await getCustomers(...data);\n        setLoading(false);\n        if (result.error) return notify(result.message, \"error\");\n        // channel ? setDisplayedCustomers([...result.result]) :\n        setCustomers((prev) => [...result?.result]);\n      } catch (error) {\n        handleError(error, notify, () => setLoading(false));\n      }\n    },\n    [handleError]\n  );\n\n  useEffect(() => {\n    fetchCustomers();\n  }, [fetchCustomers]);\n\n  useEffect(() => {\n    setDisplayedCustomers(customers);\n  }, [customers]);\n\n  useEffect(() => {\n    let tempCustomers;\n    setCurrentPage(1);\n    if (showCustomers === \"all\") tempCustomers = customers;\n\n    // for now enabled refers to PND inactive while restricted refers to active PND\n    // if(showCustomers === \"active\" || showCustomers === \"restricted\"){\n    //   tempCustomers = customers.filter(({enabled}) => (showCustomers === \"active\" && enabled) || (showCustomers === \"restricted\" && !enabled));\n    // };\n\n    if (showCustomers === \"active\" || showCustomers === \"restricted\") {\n      tempCustomers = customers.filter(\n        ({ PND }) =>\n          (showCustomers === \"active\" && !PND) ||\n          (showCustomers === \"restricted\" && PND)\n      );\n    }\n\n    // if(showCustomers === \"active\"){\n    //   tempCustomers = customers.filter(({enabled}) => {\n    //     if (showCustomers === \"active\" && enabled) return true;\n    //     // if (showCustomers === \"pending\" && !accountStatus) return true;\n    //     return false;\n    //   });\n    // };\n\n    if (showCustomers === \"pending\") {\n      tempCustomers = customers.filter(\n        ({ isnewbankcustomer, livelinesschecked, documentschecked }) => {\n          if (\n            showCustomers === \"pending\" &&\n            (isnewbankcustomer === null ||\n              livelinesschecked === \"PENDING\" ||\n              documentschecked === null)\n          )\n            return true;\n          return false;\n        }\n      );\n    }\n\n    setDisplayedCustomers(tempCustomers);\n  }, [showCustomers, customers]);\n\n  const handleNavigateToCustomer = (e) => {\n    const element = e.target;\n    if (!element.classList.contains(\"action-btn\")) return;\n    const userId = element.dataset.userId;\n    // const requestedCustomer = customers[customers.findIndex(v => v.id.toString() === userId)];\n    // history.push(`${path}/${userId}`, {requestedCustomer: requestedCustomer});\n    history.push(`${path}/${userId}`);\n  };\n\n  const handleChange = (e) => {\n    const { name, value, checked } = e.target;\n\n    if (name.includes(\"selCustomer\")) {\n      let id = name.replace(\"selCustomer-\", \"\");\n      id = id === \"all\" ? id : parseInt(id);\n      let newSelectedCustomers;\n      if (checked) {\n        newSelectedCustomers =\n          id === \"all\" ? [\"all\"] : [...selectedCustomers, id];\n      } else {\n        newSelectedCustomers =\n          selectedCustomers.includes(\"all\") && id !== \"all\"\n            ? [...displayedCustomers.map(({ id }) => id)]\n            : [...selectedCustomers];\n        const idx = newSelectedCustomers.findIndex((v) => v === id);\n        newSelectedCustomers.splice(idx, 1);\n      }\n      setSelectedCustomers(newSelectedCustomers);\n      return;\n    }\n\n    setValues((prev) => ({\n      ...prev,\n      [name]: name === \"search\" ? value.trim() : value,\n    }));\n\n    if (name === \"search\") handleSearchCustomers(value);\n  };\n\n  const handleSearchCustomers = async (searchPhrase) => {\n    setShowCustomers(\"all\");\n    setCurrentPage(1);\n    // setFilter(\"\");\n    if (!searchPhrase) {\n      isSearching.current = false;\n      setLoading(false);\n      setDisplayedCustomers(customers);\n      return;\n    }\n    isSearching.current = true;\n    setLoading(true);\n    try {\n      const result = await searchCustomers(searchPhrase);\n      setLoading(false);\n      if (result.error) return notify(result.message, \"error\");\n      isSearching.current && setDisplayedCustomers(result.result);\n      isSearching.current = false;\n    } catch (error) {\n      handleError(error, notify, () => setLoading(false));\n    }\n  };\n\n  const handleFilterCustomers = (method, param) => {\n    setFilter({ method, param });\n    fetchCustomers(method, param);\n    setCurrentPage(1);\n    setShowCustomers(\"all\");\n    setValues((prev) => ({\n      ...prev,\n      search: \"\",\n    }));\n  };\n\n  const handleExportData = async () => {\n    setDataExporting(true);\n    handleHideModal(\"#exportCustomersDataModal\");\n    try {\n      const customer_ids = selectedCustomers.includes(\"all\")\n        ? []\n        : selectedCustomers;\n      const start_date = values.start_date\n        ? values.start_date.toISOString()\n        : \"\";\n      const end_date = values.end_date ? values.end_date.toISOString() : \"\";\n      const requestTime = moment().format(\"DD-MM-YY\");\n      // fetch result\n      const result = await getExportCustomersData({\n        customer_ids,\n        start_date,\n        end_date,\n      });\n      setDataExporting(false);\n      // handle download\n      const url = window.URL.createObjectURL(result);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `Customers ${requestTime}.xlsx`); //or any other extension\n      document.body.appendChild(link);\n      link.click();\n      setTimeout(() => {\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        setValues((prev) => ({\n          ...prev,\n          start_date: null,\n          end_date: null,\n        }));\n      }, 500);\n    } catch (error) {\n      handleError(error, notify, () => setDataExporting(false));\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <>\n          <header>\n            <div>\n              <h1>Customer Accounts Management</h1>\n\n              <nav>\n                {/* eslint-disable-next-line */}\n                <a\n                  className={showCustomers === \"all\" ? \"active\" : \"\"}\n                  onClick={(e) => setShowCustomers(\"all\")}\n                >\n                  All Customers\n                </a>\n                {/* eslint-disable-next-line */}\n                <a\n                  className={showCustomers === \"active\" ? \"active\" : \"\"}\n                  onClick={(e) => setShowCustomers(\"active\")}\n                >\n                  Active\n                </a>\n                {/* eslint-disable-next-line */}\n                <a\n                  className={showCustomers === \"pending\" ? \"active\" : \"\"}\n                  onClick={(e) => setShowCustomers(\"pending\")}\n                >\n                  Pending\n                </a>\n                {/* eslint-disable-next-line */}\n                <a\n                  className={showCustomers === \"restricted\" ? \"active\" : \"\"}\n                  onClick={(e) => setShowCustomers(\"restricted\")}\n                >\n                  Restricted\n                </a>\n              </nav>\n            </div>\n            <div>\n              <div className=\"small-admin-details\">\n                <img src={face} alt=\"\" />\n                {adminName || `NPF Admin`}\n                <i className=\"arrow down\"></i>\n              </div>\n              <div className=\"some-container\">\n                <div className=\"search-div\">\n                  <label htmlFor=\"search\">\n                    <SearchIcon />\n                  </label>\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    name=\"search\"\n                    id=\"search\"\n                    aria-label=\"Search for customers\"\n                    value={values.search}\n                    onChange={handleChange}\n                  />\n                </div>\n                <button\n                  onClick={(e) => handleOpenModal(\"#exportCustomersDataModal\")}\n                  id=\"exportCustomersData\"\n                  className={`btn export-data-btn d-block ${\n                    isDataExporting ? \"loading disabled\" : \"\"\n                  }`}\n                >\n                  {isDataExporting ? (\n                    <SpinnerIcon className=\"rotating\" />\n                  ) : (\n                    <>\n                      <ExportIcon /> Export Data\n                    </>\n                  )}\n                </button>\n                <button\n                  className=\"btn filter-btn dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  {filter.param === \"bvn\" ? (\n                    \"BVN\"\n                  ) : filter.param === \"phone\" ? (\n                    \"Phone\"\n                  ) : filter.param === \"bank\" ? (\n                    \"Bank\"\n                  ) : filter.param === \"true\" ? (\n                    \"Completed\"\n                  ) : filter.param === \"false\" ? (\n                    \"InComplete\"\n                  ) : (\n                    <>\n                      <Funnel /> Filter\n                    </>\n                  )}\n                </button>\n                {/* <div className=\"dropdown\">\n                  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown button\n                  </button> */}\n                <div\n                  className=\"dropdown-menu\"\n                  aria-labelledby=\"dropdownMenuButton\"\n                >\n                  <h5 className=\"dropdown-header\">Filter Customers</h5>\n                  <div className=\"dropdown-divider\"></div>\n                  <h6 className=\"dropdown-header\">By Registration Mode</h6>\n                  <button\n                    className={`dropdown-item ${\n                      filter.param === \"bvn\" ? \"active\" : \"\"\n                    }`}\n                    onClick={(e) => handleFilterCustomers(\"channel\", \"bvn\")}\n                  >\n                    BVN\n                  </button>\n                  <button\n                    className={`dropdown-item ${\n                      filter.param === \"phone\" ? \"active\" : \"\"\n                    }`}\n                    onClick={(e) => handleFilterCustomers(\"channel\", \"phone\")}\n                  >\n                    Phone number\n                  </button>\n                  <button\n                    className={`dropdown-item ${\n                      filter.param === \"bank\" ? \"active\" : \"\"\n                    }`}\n                    onClick={(e) => handleFilterCustomers(\"channel\", \"bank\")}\n                  >\n                    Bank\n                  </button>\n                  <div className=\"dropdown-divider\"></div>\n                  <h6 className=\"dropdown-header\">\n                    By Registration Completion\n                  </h6>\n                  <button\n                    className={`dropdown-item ${\n                      filter.param === \"true\" ? \"active\" : \"\"\n                    }`}\n                    onClick={(e) =>\n                      handleFilterCustomers(\"reg_complete\", \"true\")\n                    }\n                  >\n                    Completed\n                  </button>\n                  <button\n                    className={`dropdown-item ${\n                      filter.param === \"false\" ? \"active\" : \"\"\n                    }`}\n                    onClick={(e) =>\n                      handleFilterCustomers(\"reg_complete\", \"false\")\n                    }\n                  >\n                    Incomplete\n                  </button>\n                  {filter.param && (\n                    <>\n                      <div className=\"dropdown-divider\"></div>\n                      <button\n                        className={`dropdown-item`}\n                        onClick={(e) => handleFilterCustomers(\"\", \"\")}\n                      >\n                        Clear\n                      </button>\n                    </>\n                  )}\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </header>\n          <main className=\"customers-page\">\n            {(isLoading || displayedCustomers.length === 0) && (\n              <div className=\"searching-block\">\n                <div\n                  className={\"svg-holder \" + (!isLoading ? \"not-loading\" : \"\")}\n                >\n                  {isLoading ? (\n                    <SpinnerIcon className=\"rotating\" />\n                  ) : (\n                    <NothingFoundIcon />\n                  )}\n                </div>\n                {!isLoading && <p>NOTHING FOUND!</p>}\n              </div>\n            )}\n            {!isLoading && displayedCustomers.length !== 0 && (\n              <>\n                <div className=\"color-dark-text-blue\">\n                  Customers per page:{\" \"}\n                  <div\n                    className=\"form-group\"\n                    style={{ display: \"inline-block\" }}\n                  >\n                    <select\n                      className=\"form-control\"\n                      onChange={(e) => {\n                        setItemsPerPage(e.target.value);\n                        setCurrentPage(1);\n                      }}\n                      value={itemsPerPage}\n                    >\n                      <option value={5}>5</option>\n                      <option value={10}>10</option>\n                      <option value={20}>20</option>\n                      <option value={50}>50</option>\n                      <option value={100}>100</option>\n                      <option value={150}>150</option>\n                      <option value={200}>200</option>\n                    </select>\n                  </div>\n                </div>\n                <table className=\"table table-borderless table-hover\">\n                  <thead className=\"color-dark-text-blue\">\n                    <tr>\n                      {/* <th scope=\"col\">\n                    <input type=\"checkbox\" name=\"selCustomer-all\" onChange={handleChange} checked={selectedCustomers.includes(\"all\")} />\n                  </th> */}\n                      <th scope=\"col\">Customer</th>\n                      <th scope=\"col\">BVN</th>\n                      <th scope=\"col\">Phone</th>\n                      <th scope=\"col\">PND Status</th>\n                      <th scope=\"col\">Facial Liveliness Check</th>\n                      <th scope=\"col\">Registration Date</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody onClick={handleNavigateToCustomer}>\n                    <tr className=\"spacer\" />\n                    {displayedCustomers.map((v, idx) => {\n                      const initialBoundary =\n                        (currentPage - 1) * itemsPerPage + 1;\n                      const finalBoundary = currentPage * itemsPerPage;\n                      const itemNumber = idx + 1;\n                      if (\n                        itemNumber < initialBoundary ||\n                        itemNumber > finalBoundary\n                      )\n                        return null;\n\n                      const pseudoAccStatus = !v.PND;\n                      const showIncompleteBadge =\n                        v.signup_incomplete &&\n                        (filter.method !== \"reg_complete\" ||\n                          filter.param !== \"false\");\n\n                      return (\n                        <Fragment key={`${v.user} + ${idx}`}>\n                          <tr className=\"customer-card\">\n                            {/* <th scope=\"row\" style={{verticalAlign: \"middle\"}}>\n                        <input\n                          type=\"checkbox\"\n                          name={`selCustomer-${v.id}`}\n                          checked={selectedCustomers.includes(v.id) || selectedCustomers.includes(\"all\")}\n                          onChange={handleChange}/>\n                      </th> */}\n                            <td className=\"major-details\">\n                              <div className=\"row\">\n                                <div className=\"customer-img\">\n                                  <img\n                                    src={v.photo_location || placeholderImg}\n                                    className=\"\"\n                                    alt=\"\"\n                                  />\n                                </div>\n                                <div className=\"col\">\n                                  <div className=\"name font-weight-bold\">\n                                    {v.firstname} {v.lastname}\n                                    {showIncompleteBadge && \" (Incomplete)\"}\n                                  </div>\n                                  <div className=\"email font-weight-light\">\n                                    {v.email}\n                                  </div>\n                                  {/* <div className=\"acc-number\">AC/N: {v.accountNumber || \"N/A\"}</div> */}\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"bvn font-weight-light\">\n                              {v.bvnhash || \"N/A\"}\n                            </td>\n                            <td className=\"phone font-weight-light\">\n                              (234) {v.phone.replace(\"234\", \"0\")}\n                            </td>\n                            <td>\n                              <span\n                                className={`account-status ${\n                                  pseudoAccStatus ? \"active\" : \"pending\"\n                                }`}\n                              >\n                                {pseudoAccStatus ? \"INACTIVE\" : \"ACTIVE\"}\n                              </span>\n                            </td>\n                            <td>\n                              {/* <span className={`liveliness ${v.liveliness ? \"provided\" : \"\"}`}>\n                          {v.liveliness ? <CheckCircleFill /> : <TimesIcon />}\n                          {v.liveliness ? \" P\" : \"Not p\"}rovided\n                        </span> */}\n                              <span\n                                className={`liveliness ${\n                                  v.video_location ? \"provided\" : \"\"\n                                }`}\n                              >\n                                {v.video_location ? (\n                                  <CheckCircleFill />\n                                ) : (\n                                  <TimesIcon />\n                                )}\n                                {v.video_location ? \" P\" : \"Not p\"}rovided\n                              </span>\n                            </td>\n                            <td>\n                              {moment(v.createdAt).format(\"Do MMMM YYYY\")}\n                            </td>\n                            <td>\n                              <button\n                                data-user-id={v.id}\n                                className=\"btn btn-success action-btn\"\n                              >\n                                View\n                              </button>\n                            </td>\n                          </tr>\n                          {idx !== displayedCustomers.length - 1 && (\n                            <tr className=\"spacer\" />\n                          )}\n                        </Fragment>\n                      );\n                    })}\n                  </tbody>\n                </table>\n                <div className=\"audit-history-footer\">\n                  <ReactPaginate\n                    pageCount={\n                      Math.ceil(displayedCustomers.length / itemsPerPage) || 1\n                    }\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={3}\n                    forcePage={currentPage - 1}\n                    onPageChange={(selectedItem) =>\n                      setCurrentPage(selectedItem.selected + 1)\n                    }\n                    containerClassName=\"pagination-btns\"\n                    activeLinkClassName=\"active\"\n                    pageLinkClassName=\"btn\"\n                    previousLabel={<ArrowLeftShortCircleFill />}\n                    previousLinkClassName=\"btn icon\"\n                    nextLabel={\n                      <ArrowLeftShortCircleFill\n                        style={{ transform: \"rotateY(180deg)\" }}\n                      />\n                    }\n                    nextLinkClassName=\"btn icon\"\n                    disabledClassName=\"disabled\"\n                  />\n                </div>{\" \"}\n              </>\n            )}\n          </main>\n          <Modal id=\"exportCustomersDataModal\" showCloseX>\n            <div className=\"modal-body\">\n              <h5\n                className=\"modal-title color-dark-text-blue\"\n                id={`exportCustomersDataModalLabel`}\n              >\n                Export Customers Data\n              </h5>\n              <div className=\"\">\n                <p className=\"color-dark-text-blue\">Select date range</p>\n                <div className=\"date-range-container row my-5\">\n                  <div className=\"col-6\">\n                    <DatePicker\n                      selected={values.start_date}\n                      value={values.start_date}\n                      onChange={(date) =>\n                        setValues((prev) => ({\n                          ...prev,\n                          start_date: date,\n                        }))\n                      }\n                      name=\"start_date\"\n                      dateFormat=\"dd/MM/yyyy\"\n                      placeholderText=\"Start Date\"\n                      className=\"start_date form-control\"\n                      peekNextMonth\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      locale=\"en-GB\"\n                      isClearable\n                    />\n                  </div>\n\n                  <div className=\"col-6\">\n                    <DatePicker\n                      selected={values.end_date}\n                      value={values.end_date}\n                      onChange={(date) =>\n                        setValues((prev) => ({\n                          ...prev,\n                          end_date: date,\n                        }))\n                      }\n                      name=\"end_date\"\n                      dateFormat=\"dd/MM/yyyy\"\n                      placeholderText=\"End date\"\n                      className=\"end_date form-control\"\n                      minDate={values.start_date}\n                      peekNextMonth\n                      showMonthDropdown\n                      showYearDropdown\n                      dropdownMode=\"select\"\n                      locale=\"en-GB\"\n                      isClearable\n                    />\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={handleExportData}\n                    disabled={\n                      !values.start_date ||\n                      !values.end_date ||\n                      (values.start_date &&\n                        values.end_date &&\n                        moment(values.start_date).isAfter(values.end_date))\n                    }\n                  >\n                    Continue\n                  </button>\n                  <small className=\"text-danger d-block\">\n                    {values.start_date &&\n                      values.end_date &&\n                      moment(values.start_date).isAfter(values.end_date) &&\n                      \"Please select an end date that comes after the start date.\"}\n                  </small>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        </>\n      </Route>\n      <Route path={`${path}/:userId`} component={Customer} />\n    </Switch>\n  );\n};\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}